<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>设计模式</title>
    <url>/posts/d104/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>计算机基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony常用组件</title>
    <url>/posts/70e0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>布局</h1>
<h2 id="思路">思路</h2>
<ol>
<li>将每个组件看作盒子</li>
<li>可以通过DevEco Previewer的TT查看，也可以自己设置.borderWidth查看盒子</li>
</ol>
<h2 id="主轴与交叉轴概述">主轴与交叉轴概述</h2>
<p>两个轴相互垂直，不同容器中主轴方向不一样。如Column主轴为竖、交叉轴为横，而Row则相反。</p>
<ul>
<li>设置主轴：.justyfyContent(FlexAlign.)</li>
<li>设置交叉轴：.alignItems(HorizontalAlign/VerticalAlign.)</li>
</ul>
<h2 id="Column">Column</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Row">Row</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Row</span>(&#123;<span class="attr">space</span>:&#125;)</span><br><span class="line">    .<span class="title function_">width</span>()</span><br><span class="line">    .<span class="title function_">height</span>()</span><br><span class="line">    .<span class="title function_">alignItems</span>(<span class="title class_">VerticalAlign</span>)</span><br><span class="line">    .<span class="title function_">justifyContent</span>(<span class="title class_">FlexAlign</span> or <span class="title class_">FlexDirection</span> or <span class="title class_">FlexWarp</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Stack">Stack</h2>
<p>前面写的组件在下，后面写的在上</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Stack</span>(&#123;<span class="attr">alignContent</span>:<span class="title class_">Alignment</span>.<span class="property">Center</span>&#125;)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="RelativeContainer">RelativeContainer</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">RelativeContainer</span>() &#123;&#125;</span><br><span class="line">    .<span class="title function_">alignRules</span>(&#123;</span><br><span class="line">        <span class="attr">middle</span>: &#123;</span><br><span class="line">            <span class="attr">anchor</span>: <span class="string">&quot;__container__&quot;</span>,</span><br><span class="line">            <span class="attr">align</span>: <span class="title class_">HorizontalAlign</span>.<span class="property">Center</span></span><br><span class="line">         &#125;,</span><br><span class="line">        <span class="attr">center</span>: &#123;</span><br><span class="line">            <span class="attr">anchor</span>: <span class="string">&quot;__container__&quot;</span>,</span><br><span class="line">            <span class="attr">align</span>: <span class="title class_">VerticalAlign</span>.<span class="property">Center</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="property">layoutWeight</span></span><br><span class="line">    .<span class="title function_">id</span>(<span class="string">&#x27;xxxx&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Grid">Grid</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Grid</span>() &#123;</span><br><span class="line">  <span class="title class_">GridItem</span>() &#123;</span><br><span class="line">  <span class="title class_">Text</span>(key)</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//列从哪里开始到哪里结束</span></span><br><span class="line">    .<span class="title function_">columnStart</span>(<span class="number">1</span>)</span><br><span class="line">    .<span class="title function_">columnEnd</span>(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">//行从哪里开始到哪里结束</span></span><br><span class="line">    .<span class="title function_">rowStart</span>(<span class="number">5</span>)</span><br><span class="line">    .<span class="title function_">rowEnd</span>(<span class="number">6</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//fr的个数即为网格布局的行或列数。数字表示该行或列在网格布局宽度上的占比，最终决定该行或列的宽度。</span></span><br><span class="line">.<span class="title function_">rowsTemplate</span>(<span class="string">&#x27;1fr 1fr 1fr&#x27;</span>)</span><br><span class="line">.<span class="title function_">columnsTemplate</span>(<span class="string">&#x27;1fr 2fr 1fr&#x27;</span>)</span><br><span class="line"><span class="comment">//主轴方向，以及主轴最多有几个</span></span><br><span class="line">.<span class="title function_">maxCount</span>(<span class="number">3</span>)</span><br><span class="line">.<span class="title function_">layoutDirection</span>(<span class="title class_">GridDirection</span>.<span class="property">Row</span>)</span><br><span class="line"><span class="comment">//间隔</span></span><br><span class="line">.<span class="title function_">columnsGap</span>(<span class="number">10</span>)</span><br><span class="line">.<span class="title function_">rowsGap</span>(<span class="number">15</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Flex">Flex</h2>
<p>吃性能</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Flex</span>(&#123;</span><br><span class="line">    <span class="attr">justifyContent</span>:<span class="title class_">FlexAlign</span>.<span class="property">SpaceAround</span>,</span><br><span class="line">    <span class="attr">direction</span>:<span class="title class_">FlexDirection</span>.<span class="property">Row</span>,</span><br><span class="line">    <span class="attr">wrap</span>:<span class="title class_">FlexWrap</span>.<span class="property">Wrap</span>,</span><br><span class="line">    <span class="attr">alignContent</span>:<span class="title class_">FlexAlign</span>.<span class="property">SpaceAround</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Tabs">Tabs</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Tabs</span>()&#123;</span><br><span class="line">    <span class="title class_">TabContent</span>()&#123;&#125;</span><br><span class="line">    .<span class="title function_">tabBar</span>()</span><br><span class="line">&#125;</span><br><span class="line">.<span class="title function_">barPosition</span>(<span class="title class_">BarPosition</span>.<span class="property">End</span>)</span><br><span class="line">.<span class="title function_">onChange</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">	&#125;)</span><br></pre></td></tr></table></figure>
<h1>其他</h1>
<h2 id="遍历组件">遍历组件</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">ForEach</span>(<span class="variable language_">this</span>.<span class="property">list</span>,(<span class="attr">item</span>:<span class="title class_">Type</span>,idx)=&#123;</span><br><span class="line">	<span class="title function_">myComponent</span>(&#123;<span class="attr">myVal</span>:item&#125;) </span><br><span class="line">&#125;)</span><br><span class="line">struct myComponet&#123;</span><br><span class="line">	<span class="attr">myVal</span>:<span class="variable constant_">TYPE</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Button">Button</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Button</span>(<span class="string">&#x27;sss&#x27;</span>)</span><br><span class="line">    .<span class="title function_">enabled</span>(<span class="variable language_">this</span>.<span class="property">isSelect</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Checkbox">Checkbox</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Checkbox</span>()</span><br><span class="line">    .<span class="title function_">select</span>($$this.<span class="property">isSelect</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Refresh">Refresh</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Refresh</span>(&#123;</span><br><span class="line">    <span class="attr">refreshing</span>:$$this.<span class="property">isRefresh</span>,</span><br><span class="line">    <span class="attr">builder</span>:<span class="variable language_">this</span>.<span class="title class_">Refresh</span>()&#125;)&#123;</span><br><span class="line">&#125;</span><br><span class="line">.<span class="title function_">onRefreshing</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">	    <span class="variable language_">this</span>.<span class="title function_">changeRefreshLoading</span>()</span><br><span class="line">	    <span class="title class_">AlertDialog</span>.<span class="title function_">show</span>(&#123;<span class="attr">message</span>:<span class="string">&#x27;ok&#x27;</span>&#125;)</span><br><span class="line">    &#125;,<span class="number">200</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="title class_">Refresh</span>()&#123;</span><br><span class="line">	<span class="title class_">Progress</span>(&#123;</span><br><span class="line">		<span class="attr">value</span>:<span class="variable language_">this</span>.<span class="property">freshVal</span>,</span><br><span class="line">		<span class="attr">total</span>:<span class="number">100</span>,</span><br><span class="line">		<span class="attr">type</span>:<span class="title class_">ProgressType</span>.<span class="property">Ring</span></span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="TextTimer">TextTimer</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">textTimerController</span>: <span class="title class_">TextTimerController</span> = <span class="keyword">new</span> <span class="title class_">TextTimerController</span>()</span><br><span class="line"><span class="title class_">TextTimer</span>(&#123; <span class="attr">isCountDown</span>: <span class="literal">false</span>, <span class="attr">controller</span>: <span class="variable language_">this</span>.<span class="property">textTimerController</span> &#125;)</span><br><span class="line">	.<span class="title function_">format</span>(<span class="variable language_">this</span>.<span class="property">format</span>)</span><br><span class="line">	.<span class="title function_">fontSize</span>(<span class="number">15</span>)</span><br><span class="line">	.<span class="title function_">margin</span>(&#123;<span class="attr">top</span>:<span class="number">20</span>&#125;)</span><br><span class="line">	.<span class="title function_">fontWeight</span>(<span class="title class_">FontWeight</span>.<span class="property">Bold</span>)</span><br><span class="line">    .<span class="title function_">onTimer</span>(<span class="function">(<span class="params"><span class="attr">utc</span>: <span class="built_in">number</span>, <span class="attr">elapsedTime</span>: <span class="built_in">number</span></span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">textTimerController</span>.<span class="title function_">reset</span>()</span><br></pre></td></tr></table></figure>
<h2 id="Search">Search</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Search</span>()</span><br></pre></td></tr></table></figure>
<h2 id="Text">Text</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Text</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">toString</span>())</span><br><span class="line">	.<span class="title function_">textOverflow</span>(&#123; <span class="attr">overflow</span>: <span class="title class_">TextOverflow</span>.<span class="property">None</span> &#125;)</span><br><span class="line">	.<span class="title function_">maxLines</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Scroll">Scroll</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">scroller</span>:<span class="title class_">Scroller</span> = <span class="keyword">new</span> <span class="title class_">Scroller</span>()</span><br><span class="line"> <span class="title class_">Scroll</span>(<span class="variable language_">this</span>.<span class="property">scroller</span>) &#123;</span><br><span class="line"> 	</span><br><span class="line"> &#125;</span><br><span class="line">    .<span class="title function_">scrollable</span>(<span class="title class_">ScrollDirection</span>.<span class="property">Vertical</span>) </span><br><span class="line">    .<span class="title function_">scrollBar</span>(<span class="title class_">BarState</span>.<span class="property">On</span>) </span><br><span class="line">    .<span class="title function_">scrollBarColor</span>(<span class="title class_">Color</span>.<span class="property">Gray</span>) </span><br><span class="line">    .<span class="title function_">scrollBarWidth</span>(<span class="number">10</span>) </span><br><span class="line">    .<span class="title function_">edgeEffect</span>(<span class="title class_">EdgeEffect</span>.<span class="property">Spring</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Swiper">Swiper</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Swiper</span>()</span><br></pre></td></tr></table></figure>
<h2 id="TextInput">TextInput</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">TextInput</span>(&#123;<span class="attr">placeholder</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">text</span>:&amp;&amp;<span class="variable language_">this</span>.<span class="property">message</span>&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Divider">Divider</h2>
<p>下划线</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Divider</span>()</span><br></pre></td></tr></table></figure>
<h2 id="Image">Image</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Image</span>()</span><br><span class="line">    .<span class="title function_">borderRadius</span>()<span class="comment">//more large,more circle</span></span><br><span class="line">	.<span class="title function_">onAreaChange</span>((<span class="attr">oldValue</span>: <span class="title class_">Area</span>, <span class="attr">newValue</span>: <span class="function"><span class="params">Area</span>=&gt;</span> &#123;</span><br><span class="line">	     <span class="title class_">AlertDialog</span>.<span class="title function_">show</span>(&#123;</span><br><span class="line">            <span class="attr">message</span>:<span class="string">&#x27;f&#x27;</span>+newValue.<span class="property">width</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;))</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony框架结构</title>
    <url>/posts/fdb3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="https://ghchart.rshah.org/kcsx" alt=""></p>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony媒体相关</title>
    <url>/posts/86c4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>媒体组件</h1>
<h2 id="Video">Video</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">controller</span>:<span class="title class_">Videocontroller</span>=<span class="keyword">new</span> <span class="title class_">Videocontroller</span>()</span><br><span class="line"><span class="title class_">Video</span>(&#123;<span class="attr">src</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">currentProgressRate</span>:<span class="variable language_">this</span>.<span class="property">speed</span>,<span class="attr">controller</span>:<span class="variable language_">this</span>.<span class="property">controller</span>&#125;)</span><br><span class="line">    .<span class="title function_">controls</span>(<span class="literal">false</span>)</span><br><span class="line">    .<span class="title function_">onPrepared</span>(<span class="function">(<span class="params">value</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">currentPlayIndex</span>==<span class="variable language_">this</span>.<span class="property">currentIndex</span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">controller</span>.<span class="title function_">start</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">controller</span>.<span class="title function_">start</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">controller</span>.<span class="title function_">pause</span>()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony的Stage模型</title>
    <url>/posts/8aee/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>Stage模型概述</h1>
<h2 id="概述">概述</h2>
<p>Stage模型是</p>
<blockquote>
<ol>
<li>Stage模型中，多个应用组件共享同一个ArkTS引擎实例，在Stage模型中，应用组件之间可以方便的共享对象和状态，同时减少复杂应用运行对内存的占用。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Stage模型](https://developer.huawei.com/consumer/cn/arkui/arkui-stage)
">[1]</span></a></sup></li>
<li>Stage模型提供了AbilityStage、WindowStage等类作为应用组件和Window窗口的“舞台”，因此称这种应用模型为Stage模型。</li>
</ol>
</blockquote>
<h2 id="设计思路">设计思路</h2>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden>
  flowchart TB;
    target1((应用能力与系统性能平衡))
    target2((原生支持组件级迁移与协同))
    target3((支持多设备、多窗口))
    method1[Ability与UI分离]
    method2[后台管理]
    method3[基于场景的服务机制]
    method4[单进程模型]
    method5[UI与服务统一的Ability组件]
    method6[Ability生命周期定义]
    method7[组件管理与窗口管理解耦]
    target1--&gt;method1
    target1--&gt;method2
    target1--&gt;method3
    target1--&gt;method4
    target2--&gt;method1
    target2--&gt;method5
    target3--&gt;method6
    target3--&gt;method7
  </pre></div>
<h1>整体结构</h1>
<p><img src="/Harmony/ui-qt.jpg" alt="Stage模型" title="Stage模型"></p>
<h2 id="各类组件">各类组件</h2>
<p>Satge模型提供UIAbility和ExtensionAbility两种组件，有具体类承载，支持面向对象。<br>
其中，UIAbility、ExtensionAbility等组件详情如下：</p>
<h3 id="UIAbility组件">UIAbility组件</h3>
<ul>
<li>包含UI的应用组件，主要用于和用户交互</li>
<li>生命周期只包含创建/销毁/前台/后台等状态</li>
</ul>
<h3 id="ExtensionAbility组件">ExtensionAbility组件</h3>
<ul>
<li>面向特定场景的应用组件</li>
<li>需要使用ExtensionAbility的派生类</li>
<li>ExtensionAbility派生类实例由用户触发创建，并由系统管理<em>生命周期</em></li>
</ul>
<h3 id="WindowStage类">WindowStage类</h3>
<ul>
<li>与显示相关的状态通过WindowStage的事件暴露给开发者</li>
<li>每个UIAbility类实例都会与一个WindowStage类实例绑定</li>
<li>提供了应用进程内窗口管理器的作用</li>
<li>包含一个主窗口。UIAbility通过WindowStage持有了一个主窗口，该主窗口为ArkUI提供了绘制区域</li>
</ul>
<h3 id="Context">Context</h3>
<ul>
<li>Context及其派生类向开发者提供在运行期可以调用的各种资源和能力</li>
<li>UIAbility组件和各种ExtensionAbility派生类都有各自不同的Context类</li>
</ul>
<h3 id="AbilityStage">AbilityStage</h3>
<ul>
<li>每个Entry类型或者Feature类型的HAP在运行期都有一个AbilityStage类实例</li>
<li>HAP中的代码首次被加载到进程中的时候，系统会先创建AbilityStage实例</li>
<li>每个在该HAP中定义的UIAbility类，在实例化后都会与该实例产生关联</li>
<li>可通过AbilityStage获取该HAP中UIAbility实例的运行时信息</li>
</ul>
<h2 id="Stage模型流程">Stage模型流程</h2>
<h1>相关概念补充</h1>
<h2 id="HAP-Harmony-Ability-Package">HAP(Harmony Ability Package)</h2>
<ul>
<li>应用安装与运行的单元</li>
<li>将code、resources、config、std library等打包为模块</li>
<li>分为entry(应用入口、基础功能)和feature(动态特性)两类</li>
<li>单个HAP(无ExtensionAbility)：1个Entry+m个feature。推荐1个UIAbility+m个页面</li>
<li>多个HAP：n个Entry+m个feature。每个HAP1个UIAbility或ExtensionAbility</li>
</ul>
<h2 id="HAR-HarmonyOS-Ability-Resource-sup-id-fnref-2-a-href-fn-2-rel-footnote-span-class-hint-top-hint-error-hint-medium-hint-rounded-hint-bounce-aria-label-HAR-https-blog-csdn-net-u014696856-article-details-142211942-2-span-a-sup">HAR(HarmonyOS Ability Resource)<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[HAR](https://blog.csdn.net/u014696856/article/details/142211942)">[2]</span></a></sup></h2>
<ul>
<li>静态共享包，用于封装和共享代码、资源和第三方库，允许开发者将独立的功能模块打包并发布为一个可重用的单元</li>
<li>不仅可以包含代码文件，还可以包括UI布局、图片、配置文件、第三方库等资源</li>
<li>实现代码的模块化和复用</li>
</ul>
<h2 id="HSP-Harmony-Shared-Package">HSP(Harmony Shared Package)</h2>
<ul>
<li>动态共享包</li>
<li>与宿主应用同进程、命名空间、生命周期</li>
</ul>
<hr>
<h1>参考文献：</h1>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://developer.huawei.com/consumer/cn/arkui/arkui-stage">Stage模型</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/u014696856/article/details/142211942">HAR</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony最佳实践</title>
    <url>/posts/e1d9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony生命周期</title>
    <url>/posts/bfed/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony编年史</title>
    <url>/posts/88b0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony路由</title>
    <url>/posts/420d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一个Ability里面的多个page可通过router进行切换</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">pushUrl</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&quot;pages/day04/Localstoragecase02&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown示例</title>
    <url>/posts/ed04/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><!-- 标题 -->
<h1>标题</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 标题1</span></span><br><span class="line"><span class="section">## 标题2</span></span><br></pre></td></tr></table></figure>
<h1>粗体与斜体</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">### 斜体</span></span><br><span class="line">Italicized text is the <span class="emphasis">*cat&#x27;s meow*</span> # 斜体</span><br><span class="line">A<span class="emphasis">*cat*</span>meow # 斜体（突出中间部分）</span><br><span class="line"><span class="section">### 粗体</span></span><br><span class="line"><span class="strong">**bold text**</span></span><br><span class="line"><span class="strong">__bold text__</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<h3 id="斜体">斜体</h3>
<p>Italicized text is the <em>cat’s meow</em> # 斜体<br>
A<em>cat</em>meow # 斜体（突出中间部分）</p>
<h3 id="粗体">粗体</h3>
<p><strong>bold text</strong><br>
<strong>bold text</strong></p>
<h1>代码块</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 上面三个\`，下面三个\`</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1>引用</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 嵌套引用</span></span><br><span class="line"><span class="quote">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span></span><br><span class="line"><span class="section">## 带其他元素的引用</span></span><br><span class="line"><span class="quote">&gt; #### The quarterly results look great!</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; - Revenue was off the chart.</span></span><br><span class="line"><span class="quote">&gt; - Profits were higher than ever.</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;  <span class="emphasis">*Everything*</span> is going according to <span class="strong">**plan**</span>.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<h2 id="嵌套引用">嵌套引用</h2>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
<blockquote>
<p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p>
</blockquote>
</blockquote>
<h2 id="带其他元素的引用">带其他元素的引用</h2>
<blockquote>
<h4 id="The-quarterly-results-look-great">The quarterly results look great!</h4>
<ul>
<li>Revenue was off the chart.</li>
<li>Profits were higher than ever.</li>
</ul>
<p><em>Everything</em> is going according to <strong>plan</strong>.</p>
</blockquote>
<h1>列表</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 有序列表</span></span><br><span class="line"><span class="bullet">1.</span> First item</span><br><span class="line"><span class="bullet">2.</span> Second item</span><br><span class="line"><span class="bullet">3.</span> Third item</span><br><span class="line"><span class="bullet">4.</span> Fourth item</span><br><span class="line"><span class="section">## 无序列表</span></span><br><span class="line"><span class="bullet">-</span> First item</span><br><span class="line"><span class="bullet">+</span> Second item</span><br><span class="line"><span class="bullet">-</span> Third item</span><br><span class="line"><span class="bullet">    -</span> Indented item</span><br><span class="line"><span class="bullet">    -</span> Indented item</span><br><span class="line"><span class="bullet">*</span> Fourth item</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<h2 id="有序列表">有序列表</h2>
<ol>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item</li>
</ol>
<h2 id="无序列表">无序列表</h2>
<ul>
<li>First item</li>
</ul>
<ul>
<li>Second item</li>
</ul>
<ul>
<li>Third item
<ul>
<li>Indented item</li>
<li>Indented item</li>
</ul>
</li>
</ul>
<ul>
<li>Fourth item</li>
</ul>
<h1>分割线</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">---</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">________________<span class="emphasis">_</span></span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<hr>
<hr>
<hr>
<h1>链接</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个链接 [<span class="string">Markdown语法</span>](<span class="link">https://markdown.com.cn &quot;标题&quot;</span>)。</span><br><span class="line"><span class="language-xml">&lt;https://markdown.com.cn&gt;</span></span><br><span class="line"><span class="section">## 格式化</span></span><br><span class="line">I love supporting the <span class="strong">**[<span class="string">EFF</span>](<span class="link">https://eff.org</span>)**</span>.</span><br><span class="line">This is the <span class="emphasis">*[<span class="string">Markdown Guide</span>](<span class="link">https://www.markdownguide.org</span>)*</span>.</span><br><span class="line">See the section on [<span class="string">`code`</span>](<span class="link">#code</span>).</span><br></pre></td></tr></table></figure>
<p>效果如下：<br>
这是一个链接 <a href="https://markdown.com.cn" title="标题">Markdown语法</a>。<br>
<a href="https://markdown.com.cn">https://markdown.com.cn</a></p>
<h2 id="格式化">格式化</h2>
<p>I love supporting the <strong><a href="https://eff.org">EFF</a></strong>.<br>
This is the <em><a href="https://www.markdownguide.org">Markdown Guide</a></em>.<br>
See the section on <a href="#code"><code>code</code></a>.</p>
<h1>图片</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">这是图片</span>](<span class="link">/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;</span>)</span><br><span class="line"><span class="section">## 链接图片</span></span><br><span class="line">[<span class="string">![沙漠中的岩石图片</span>](<span class="link">/assets/img/shiprock.jpg &quot;Shiprock&quot;</span>)](<span class="link">https://markdown.com.cn</span>) </span><br></pre></td></tr></table></figure>
<p>效果如下：<br>
<img src="/assets/img/philly-magic-garden.jpg" alt="这是图片" title="Magic Gardens"></p>
<h2 id="链接图片">链接图片</h2>
<p><a href="https://markdown.com.cn"><img src="/assets/img/shiprock.jpg" alt="沙漠中的岩石图片" title="Shiprock"></a></p>
<h1>流程图</h1>
<p>详见<img src="https://mermaid.js.org/syntax/flowchart.html" alt="https://mermaid.js.org/syntax/flowchart.html"></p>
<!-- # 参考文献
需"npm install hexo-reference --save"安装插件。
```Markdown
### 引用文献的语句
<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[]()
``` -->">[1]</span></a></sup>
<h3 id="引用参考文献：">引用参考文献：</h3>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href=""></a>
``` --&gt;<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>博客所用插件记录</title>
    <url>/posts/1495/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony通用属性</title>
    <url>/posts/bbc6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony网络相关</title>
    <url>/posts/cf3a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>Get方式</h1>
<h2 id="根据JSON内容设置接口">根据JSON内容设置接口</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//如果是数组，则用data:Data[] = []</span></span><br><span class="line"><span class="comment">//如果是具体类型，则用dataModule:DataModule = new DataModule</span></span><br><span class="line"><span class="title class_">Interface</span> <span class="title class_">Data</span>&#123;</span><br><span class="line">    <span class="attr">data1</span>:<span class="title class_">CommonType</span></span><br><span class="line">    <span class="attr">data2</span>:sonType</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DataModule</span> <span class="keyword">implements</span> <span class="title class_">Data</span>&#123;</span><br><span class="line">    <span class="attr">data1</span>:<span class="title class_">CommonType</span></span><br><span class="line">    <span class="attr">data2</span>:specialType</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="attr">info</span>:<span class="title class_">Data</span></span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data1</span> = info.<span class="property">data1</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data2</span> = info.<span class="property">data2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">specialType</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="meta">@State</span> <span class="attr">dataList</span>:<span class="title class_">DataModule</span>[] = [</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">DataModule</span>(&#123;<span class="attr">data1</span>:xx,<span class="attr">data2</span>:yy&#125;),</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">DataModule</span>(&#123;<span class="attr">data1</span>:xx,<span class="attr">data2</span>:yy&#125;),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="获取">获取</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; http &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.NetworkKit&#x27;</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"><span class="comment">//创建http</span></span><br><span class="line"><span class="keyword">let</span> httpRequest = http.<span class="title function_">createHttp</span>()</span><br><span class="line"><span class="comment">//请求</span></span><br><span class="line"><span class="comment">//含method,header</span></span><br><span class="line">httpRequest.<span class="title function_">request</span>(url,&#123;</span><br><span class="line">  <span class="attr">method</span>:http.<span class="property">RequestMethod</span>.<span class="property">GET</span>,</span><br><span class="line">  <span class="attr">header</span>:&#123;</span><br><span class="line">    <span class="attr">cookie</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">agent</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">info</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">result</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(info.<span class="property">result</span>.<span class="title function_">toString</span>())</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//Json.stringify()</span></span><br></pre></td></tr></table></figure>
<h2 id="使用">使用</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">xxx</span>?.<span class="property">yyy</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony状态管理</title>
    <url>/posts/8fb2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>实时渲染必备条件</h1>
<ol>
<li>有状态修饰器</li>
<li>第一层级数据改变<br>
但@Builder原则上只展示界面，不涉及状态相关，不改变数据</li>
</ol>
<h1>相关组件</h1>
<h2 id="Stata">@Stata</h2>
<p>驱动界面刷新</p>
<h2 id="Prop">@Prop</h2>
<ul>
<li>单向传值，父传子，只传一次</li>
<li>深拷贝，父与子各有一份完全独立的数据(独立内存区域)</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@State</span> <span class="attr">val</span>:<span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Son</span>(&#123;<span class="attr">val</span>:val&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@Prop</span> val</span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Link">@Link</h2>
<ul>
<li>双向传值</li>
<li>浅拷贝，父与子共用一份数据</li>
</ul>
<h3 id="示例">示例</h3>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@State</span> <span class="attr">val</span>:<span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Son</span>(&#123;<span class="attr">val</span>:val&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@Link</span> <span class="attr">val</span>:<span class="built_in">number</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Provide和-Consume">@Provide和@Consume</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="meta">@eEntry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@Provide</span> <span class="attr">val</span>:<span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Son</span>(&#123;<span class="attr">val</span>:val&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@Consume</span> <span class="attr">val</span>:<span class="built_in">number</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Obeserved和-ObjectLink">@Obeserved和@ObjectLink</h2>
<h3 id="概述">概述</h3>
<ul>
<li>@ObjectLink不能在@entry内</li>
</ul>
<h3 id="示例-2">示例</h3>
<h4 id="常规用法">常规用法</h4>
<p>@entry组件：通过将@State修饰的变量a:A，赋值给View组件，即View({a.attr:a.attr})<br>
View组件：通过@ObjectLink attr，观察和修改a的属性attr<br>
@Observer A：有成员a类型为BasicClassA<br>
@Observer BasicClassA：有属性attr</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="嵌套对象">嵌套对象</h4>
<h2 id="Track">@Track</h2>
<p>属性改变时，只刷新自己的内容。如果不加，则会刷新整个类所有与界面绑定的属性的内容</p>
<ul>
<li>仅在类内使用</li>
<li>类中只要有一个属性使用了，其他与界面相关的属性都必须添加</li>
</ul>
<h2 id="Watch">@Watch</h2>
<h2 id="">$$</h2>
<h1>持久化与全局变量</h1>
<p>Localstorage、Appstorage、PersistenStorage</p>
<h2 id="LocalStorage">@LocalStorage</h2>
<ul>
<li>在一个Ability内数据共享，局限性大，基本用不上</li>
<li>一般只用于服务卡片<br>
###示例</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Page1————————————————————————————</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">data</span>: <span class="title class_">Record</span>&lt;<span class="built_in">string</span>,<span class="built_in">string</span>&gt;=&#123;</span><br><span class="line">    <span class="string">&quot;age&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"><span class="title class_">Let</span> <span class="attr">storage</span>:<span class="title class_">LocalStorage</span>=<span class="keyword">new</span> <span class="title class_">LocalStorage</span>(data)</span><br><span class="line"><span class="comment">//将storage注入到页面里面</span></span><br><span class="line"><span class="meta">@Entry</span>(storage)</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Page1</span> &#123;</span><br><span class="line">    <span class="title function_">aboutToAppear</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span>=storage.<span class="title function_">get</span>(<span class="string">&quot;age&quot;</span>) <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">        storage.<span class="title function_">set</span>(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Page2————————————————————————————</span></span><br><span class="line"><span class="keyword">import</span> &#123;storage&#125; <span class="keyword">from</span> <span class="title class_">Page1</span></span><br><span class="line"><span class="meta">@Entry</span>(storage)</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Page2</span> &#123;</span><br><span class="line">    <span class="title function_">aboutToAppear</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span>=storage.<span class="title function_">get</span>(<span class="string">&quot;age&quot;</span>) <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="AppStorage">@AppStorage</h2>
<ul>
<li>AppStorage缓存在应用进程内，应用结束后数据也随之销毁</li>
<li>AppStorage持久化则可以缓存到磁盘，即@PersistentStorage</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">AppStorage</span>.<span class="title function_">setOrCreate</span>(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;10&quot;</span>)</span><br><span class="line"><span class="title class_">AppStorage</span>.<span class="title function_">get</span>(<span class="string">&quot;userName&quot;</span>)<span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line"><span class="comment">//单向传值，不会写回AppStorage中，即父(storage)传子</span></span><br><span class="line"><span class="meta">@StorageProp</span>(<span class="string">&quot;name&quot;</span>) <span class="attr">name</span>:<span class="built_in">string</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">//双向传值，会写回AppStorage中</span></span><br><span class="line"><span class="meta">@StorageLink</span>(<span class="string">&quot;name&quot;</span>) <span class="attr">name</span>:<span class="built_in">string</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="PersistentStorage">@PersistentStorage</h2>
<p>用于辅助AppStorage持久化到磁盘</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">PersistentStorage</span>.<span class="title function_">persistProp</span>(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">AppStoragecase03</span> &#123;</span><br><span class="line">    <span class="meta">@StorageProp</span>(<span class="string">&quot;userName&quot;</span>)<span class="attr">userName</span>:<span class="built_in">string</span>=<span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">PrefrencePage</span>&#123;</span><br><span class="line">    store_name=<span class="string">&quot;DEFAULT&quot;</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Button</span>(<span class="string">&quot;持久化缓存数据&quot;</span>)</span><br><span class="line">        .<span class="title function_">onClick</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">//参数：context，仓库名称</span></span><br><span class="line">            <span class="comment">//context:上下文参数 Ability Application</span></span><br><span class="line">            <span class="comment">//仓库名称</span></span><br><span class="line">            preferences.<span class="title function_">getPreferences</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>),<span class="variable language_">this</span>.<span class="property">store_name</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">//val是prefrences首选项对象</span></span><br><span class="line">            val.<span class="title function_">putSync</span>(<span class="string">&quot;userName&quot;</span>,<span class="variable language_">this</span>.<span class="property">message</span>)</span><br><span class="line">            <span class="comment">//写入到磁盘</span></span><br><span class="line">            val.<span class="title function_">flush</span>()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="title class_">Button</span>(<span class="string">&quot;获取持久化的数舞&quot;</span>)</span><br><span class="line">        .<span class="title function_">onClick</span>(<span class="function">()=&gt;</span>&#123;    </span><br><span class="line">            preferences.<span class="title function_">getPreferences</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>),<span class="variable language_">this</span>.<span class="property">store_name</span>)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="comment">//读取数据</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">result</span>=val.<span class="title function_">getSync</span>(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;&quot;</span>)<span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>静态模式</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; preferences &#125;<span class="keyword">from</span> <span class="string">&#x27;@kit.ArkData&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Context</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ohos.arkui.uIcontext&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PreferencesUtil</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="attr">storeName</span>:<span class="built_in">string</span> =<span class="string">&quot;DEFAULT&quot;</span></span><br><span class="line">    <span class="comment">//async代表该函数异步</span></span><br><span class="line">    <span class="comment">//await与async同时出现</span></span><br><span class="line">    <span class="comment">//获取仓库</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">getPreferenInstance</span>(<span class="params"><span class="attr">context</span>:<span class="title class_">Context</span>, storeName?:<span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> store = storeName != <span class="literal">undefined</span> ? storeName : <span class="title class_">PrefrencesUtil</span>.<span class="property">storeName</span></span><br><span class="line">        <span class="comment">//await 等待这个函数执行完毕 拿到结果</span></span><br><span class="line">        <span class="keyword">let</span> preferences = avait preferences.<span class="title function_">getPreferences</span>(context,store)</span><br><span class="line">        <span class="keyword">return</span> preferences</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//给仓库设置值</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">putInfo</span>(<span class="params"><span class="attr">context</span>: context, <span class="attr">key</span>: <span class="built_in">string</span>, <span class="attr">value</span>: <span class="built_in">string</span>, storeName?:<span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> preferences = <span class="keyword">await</span> preferencesUtil.<span class="title function_">getPreferenInstance</span>(context, storeName)</span><br><span class="line">        preferences.<span class="title function_">putsync</span>(key,value)</span><br><span class="line">        <span class="keyword">await</span> preferences.<span class="title function_">flush</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">aboutToAppear</span>():<span class="title class_">Promise</span>&lt;<span class="built_in">void</span>&gt;&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">result</span> = <span class="keyword">await</span> <span class="title class_">PreferencesUtil</span>.<span class="title function_">getInfo</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>),<span class="variable language_">this</span>.<span class="property">key_name</span>) <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>单例模式</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; preferences &#125;<span class="keyword">from</span> <span class="string">&#x27;@kit.ArkData&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Context</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ohos.arkui.uIcontext&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Prefrencesutils</span> &#123;</span><br><span class="line"><span class="comment">//获取仓库对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="attr">pre</span>: preferences.<span class="property">ValueType</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="title function_">getInstances</span>(<span class="params"><span class="attr">context</span>:<span class="title class_">Context</span></span>)&#123;</span><br><span class="line">        <span class="comment">//保证程序里面只有一个preferences 对象</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">PrefrencesUtils</span>.<span class="property">pre</span>!=<span class="literal">undefined</span> ll <span class="title class_">Prefrencesutils</span>.<span class="property">pre</span>!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">PrefrencesUtils</span>.<span class="property">pre</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title class_">PrefrencesUtils</span>.<span class="property">pre</span> = preferences.<span class="title function_">getPreferences</span>(context, <span class="string">&quot;DEFAULT&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">PrefrencesUtils</span>.<span class="property">pre</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">putInfo</span>(<span class="params"><span class="attr">context</span>: <span class="title class_">Context</span>, <span class="attr">key</span>: <span class="built_in">string</span>, <span class="attr">value</span>: <span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> prefrences = <span class="keyword">await</span> <span class="title class_">PrefrencesUtils</span>.<span class="title function_">getInstances</span>(context)</span><br><span class="line">        prefrences.<span class="title function_">putsync</span>(key,value)</span><br><span class="line">        prefrences.<span class="title function_">flush</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony小技巧</title>
    <url>/posts/ca8a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>语法</h1>
<h2 id="值传递与引用字面量传递">值传递与引用字面量传递</h2>
<h3 id="值传递">值传递</h3>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//father</span></span><br><span class="line"><span class="title function_">myComponent</span>(<span class="variable language_">this</span>.<span class="property">params</span>)</span><br><span class="line"><span class="comment">//son</span></span><br><span class="line"><span class="meta">@Builder</span> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myComponent</span>(<span class="params">params</span>)&#123;</span><br><span class="line">	params</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="引用字面量传递">引用字面量传递</h3>
<p>引用字面量必须带&quot;{}&quot;，且值传递无法让父组件的值刷新</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">myComponent</span>(&#123;<span class="attr">attr1</span>:a1,<span class="attr">attr2</span>:a2&#125;)</span><br><span class="line"><span class="comment">//son</span></span><br><span class="line"><span class="meta">@Builder</span> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myComponent</span>(<span class="params">params</span>)&#123;</span><br><span class="line">	params.<span class="property">attr1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">Params</span>&#123;</span><br><span class="line">	<span class="attr">attr1</span>:<span class="title class_">Attr1</span></span><br><span class="line">	<span class="attr">attr2</span>:<span class="title class_">Attr2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="取反">取反</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">doLike</span>:<span class="function">(<span class="params"><span class="attr">item</span>:<span class="title class_">ReplyItemModel</span></span>)=&gt;</span><span class="built_in">void</span> =<span class="function">(<span class="params"><span class="attr">item</span>: <span class="title class_">ReplyItemModel</span></span>)=&gt;</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="传入匿名函数">传入匿名函数</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">click</span>=!<span class="variable language_">this</span>.<span class="property">clic</span></span><br></pre></td></tr></table></figure>
<h2 id="类型断言">类型断言</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">xx <span class="keyword">as</span> <span class="title class_">Type</span></span><br><span class="line"><span class="attr">data</span>:<span class="title class_">GoodsModule</span>=<span class="keyword">new</span> <span class="title class_">GoodsModule</span>(&#123;&#125; <span class="keyword">as</span> <span class="title class_">GoodsInfo</span>)</span><br></pre></td></tr></table></figure>
<h1>对Object数组排序</h1>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(sortMethod===<span class="literal">true</span>)&#123;</span><br><span class="line">	<span class="variable language_">this</span>.<span class="property">commentsInfoArr</span>.<span class="title function_">sort</span>(<span class="function">(<span class="params"><span class="attr">x</span>:<span class="title class_">CommentsInfo</span>,<span class="attr">y</span>:<span class="title class_">CommentsInfo</span></span>)=&gt;</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (x.<span class="property">date</span> &gt;y.<span class="property">date</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (x.<span class="property">date</span> &lt;y.<span class="property">date</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>&#125;</span><br><span class="line">	)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="对Object数组去重">对Object数组去重</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">newCart</span>:<span class="title class_">Foods</span>[] = []</span><br><span class="line"> <span class="variable language_">this</span>.<span class="property">shoppingCartArr</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params"><span class="attr">item</span>:<span class="title class_">Foods</span></span>)=&gt;</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> newCart.<span class="title function_">includes</span>(item)?<span class="string">&#x27;&#x27;</span>:newCart.<span class="title function_">push</span>(item)</span><br><span class="line"> &#125;)</span><br><span class="line"> <span class="variable language_">this</span>.<span class="property">shoppingCartArr</span> = newCart</span><br></pre></td></tr></table></figure>
<h2 id="日期格式化">日期格式化</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="meta">@State</span> <span class="attr">now</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"><span class="meta">@State</span> <span class="attr">formattedDate</span>: <span class="built_in">string</span> = <span class="variable language_">this</span>.<span class="property">now</span>.<span class="title function_">toLocaleDateString</span>(<span class="string">&quot;en-US&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="随机数">随机数</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">rnd = <span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="variable constant_">RANGE</span></span><br></pre></td></tr></table></figure>
<h2 id="时间相关">时间相关</h2>
<h3 id="setTimeout">setTimeout</h3>
<p>t时间后才执行</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">	&#125;,t)</span><br></pre></td></tr></table></figure>
<h3 id="setInterval">setInterval</h3>
<p>每隔t时间执行一次</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">taskId</span>:<span class="built_in">number</span> = -<span class="number">1</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">taskId</span> = <span class="title function_">setTnterval</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">	++<span class="variable language_">this</span>.<span class="property">cnt</span></span><br><span class="line">	<span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">taskId</span>)</span><br><span class="line">&#125;,t)</span><br></pre></td></tr></table></figure>
<h1>组件</h1>
<h2 id="aspectRatio-m-n">aspectRatio(m/n)</h2>
<p>m/n为宽高比</p>
<h2 id="布局调整">布局调整</h2>
<h3 id="layoutWeight-n">layoutWeight(n)</h3>
<p>n为占据的份额。可用于底部，这样底部上方的内容不会把底部挤掉</p>
<h3 id="margin">.margin({})</h3>
<h3 id="padding">.padding({})</h3>
<h2 id="stateStyles">stateStyles</h2>
<p>里面只能使用通用属性</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">.<span class="title function_">stateStyles</span>(&#123;</span><br><span class="line">	<span class="attr">normal</span>:&#123;</span><br><span class="line">		.<span class="title function_">width</span>(<span class="number">130</span>)</span><br><span class="line">		.<span class="title function_">height</span>(<span class="number">130</span>)</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">pressed</span>:&#123;</span><br><span class="line">		.<span class="title function_">width</span>((<span class="number">180</span>))</span><br><span class="line">		.<span class="title function_">height</span>(<span class="number">180</span>)</span><br><span class="line">	&#125;,</span><br><span class="line">	 <span class="attr">disabled</span>:&#123;</span><br><span class="line">		.<span class="title function_">backgroundColor</span>(<span class="title class_">Color</span>.<span class="property">Green</span>)</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">selected</span>:&#123;</span><br><span class="line">		.<span class="title function_">width</span>(<span class="number">280</span>)</span><br><span class="line">		.<span class="title function_">height</span>(<span class="number">280</span>)</span><br><span class="line">	&#125;,</span><br><span class="line">	focused    :&#123;</span><br><span class="line">		.<span class="title function_">width</span>(<span class="number">280</span>)</span><br><span class="line">		.<span class="title function_">height</span>(<span class="number">280</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="弹窗">弹窗</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//showToast</span></span><br><span class="line">promptAction.<span class="title function_">showToast</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;nreivn&#x27;</span> &#125;)</span><br><span class="line"><span class="comment">//AlertDialog</span></span><br><span class="line"><span class="title class_">AlertDialog</span>.<span class="title function_">show</span>()</span><br><span class="line"><span class="comment">//@customDialog</span></span><br><span class="line"><span class="comment">////父：</span></span><br><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Componnent</span></span><br><span class="line">struct <span class="title class_">Father</span>&#123;</span><br><span class="line">	<span class="attr">dialogController</span>: <span class="title class_">CustomDialogController</span> | <span class="literal">null</span> = <span class="keyword">new</span> <span class="title class_">CustomDialogController</span>(&#123;</span><br><span class="line">		<span class="attr">builder</span>: <span class="title class_">ShoppingCart</span>(&#123;<span class="attr">totalCost</span>:<span class="variable language_">this</span>.<span class="property">totalCost</span>,<span class="attr">cnt</span>:<span class="variable language_">this</span>.<span class="property">cnt</span>,<span class="attr">shoppingCartArr</span>:<span class="variable language_">this</span>.<span class="property">shoppingCartArr</span>,<span class="attr">isShowShoppingCart</span>:<span class="variable language_">this</span>.<span class="property">isShowShoppingCart</span>&#125;),</span><br><span class="line">		<span class="attr">autoCancel</span>: <span class="literal">true</span>,</span><br><span class="line">		<span class="attr">alignment</span>: <span class="title class_">DialogAlignment</span>.<span class="property">Bottom</span>,</span><br><span class="line">		<span class="attr">offset</span>: &#123; <span class="attr">dx</span>: <span class="number">0</span>, <span class="attr">dy</span>: <span class="number">35</span> &#125;,</span><br><span class="line">		<span class="comment">// gridCount: 4,</span></span><br><span class="line">		<span class="attr">customStyle</span>: <span class="literal">false</span>,</span><br><span class="line">		<span class="comment">// backgroundColor: 0xd9ffffff,</span></span><br><span class="line">		<span class="attr">cornerRadius</span>: <span class="number">20</span>,</span><br><span class="line">		<span class="attr">width</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">		<span class="attr">height</span>: <span class="string">&#x27;70%&#x27;</span>,</span><br><span class="line">		<span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">		<span class="comment">// borderStyle: BorderStyle.Dashed,//使用borderStyle属性，需要和borderWidth属性一起使用</span></span><br><span class="line">		<span class="comment">// borderColor: Color.Blue,//使用borderColor属性，需要和borderWidth属性一起使用</span></span><br><span class="line">		<span class="comment">// shadow: (&#123; radius: 20, color: Color.Grey, offsetX: 50, offsetY: 0&#125;),</span></span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">////子：</span></span><br><span class="line"><span class="meta">@Componnent</span></span><br><span class="line">struct <span class="title class_">Son</span>&#123;</span><br><span class="line">	controller?: <span class="title class_">CustomDialogController</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自定义</span></span><br></pre></td></tr></table></figure>
<h2 id="zIndex-n">.zIndex(n)</h2>
<p>在父容器中的层级，n越高层级越高</p>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/3eeb/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
