<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>设计模式</title>
    <url>/posts/d104/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>计算机基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony案例分析(2)——开眼App</title>
    <url>/posts/9b25/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>任务背景</h1>
<h2 id="任务描述">任务描述</h2>
<p>根据所给接口，仿照“开眼”APP开发UI界面，并实现页面路由、发帖、评论等APP基础功能</p>
<h2 id="训练目标">训练目标</h2>
<ol>
<li>对接口的使用</li>
<li>各种组件的综合运用</li>
<li>布局</li>
<li>性能优化</li>
</ol>
<h1>实现思路</h1>
<h2 id="布局">布局</h2>
<ol>
<li>对于首页，用Tabs开发下方导航栏</li>
<li></li>
</ol>
<h2 id="路由">路由</h2>
<p>使用router或者CustomDialog完成页面跳转</p>
<h2 id="接口数据获取">接口数据获取</h2>
<ol>
<li>根据接口格式，通过相关工具<img src="https://jsontool.cn/#:~:text=JsonTool.c" alt="JsonTool" title="JsonTool">、开眼App具体布局，分析接口数据应用方式</li>
<li>通过http包的Get方法请求数据</li>
<li></li>
</ol>
<h1>问题与解决方案</h1>
<table>
<thead>
<tr>
<th>问题</th>
<th>解决方案</th>
</tr>
</thead>
<tbody>
<tr>
<td>接口数据庞大，难以下手</td>
<td>写一个DataAnalysis组件去分析Json里的重要数据，比如type<br>根据type分析该type下的数据用于何处</td>
</tr>
<tr>
<td>如何申请模拟器网络权限</td>
<td>src/main/resources/module.json5中的module添加&quot;requestPermissions&quot;: [{“name”: “ohos.permission.INTERNET”</td>
</tr>
</tbody>
</table>
<pre><code>&#125;],
</code></pre>
<h1>优化</h1>
<h2 id="待优化方向">待优化方向</h2>
<ol>
<li>使用Navigation组件开发首页</li>
<li>尽量不用Flex</li>
<li>使用LazyForEach</li>
<li>用泛型等面向对象思想减少组件冗余</li>
</ol>
<h2 id="具体优化思路">具体优化思路</h2>
<h1>参考答案分析</h1>
<h1>总结</h1>
<p>没啥难度，但有些收获。收获如下：</p>
<ol>
<li>router的使用</li>
<li>嵌套CustomDialog的使用</li>
<li>Video的使用</li>
<li>小技巧Swiper() .index(&amp;&amp;this.idx)</li>
</ol>
]]></content>
      <tags>
        <tag>鸿蒙案例</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony案例分析(1)——美团购物</title>
    <url>/posts/98cf/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>任务背景</h1>
<h2 id="任务描述">任务描述</h2>
<p>根据接口数据和美团APP，仿照美团购物界面进行开发，构建商品与购物车之间的逻辑关系</p>
<h2 id="训练目标">训练目标</h2>
<ol>
<li>理解UI刷新原理</li>
<li>掌握组件间传值方法，如@Prop、@Link、@Provide与@Consume</li>
<li>掌握持久化方法</li>
</ol>
<h1>实现思路</h1>
<h2 id="布局">布局</h2>
<p>用Coloumn、Row进行布局，通过onClick和if-else触发或切换组件</p>
<h2 id="传值">传值</h2>
<ol>
<li>将商品写成对象数组通过@Link传递</li>
<li>商品数量令用一个number数组存储到AppStorage上</li>
</ol>
<h1>问题与解决方案</h1>
<table>
<thead>
<tr>
<th>问题</th>
<th>解决方案</th>
</tr>
</thead>
<tbody>
<tr>
<td>加入商品数组的会有重复</td>
<td>写一个面对对象数组的去重函数</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h1>优化</h1>
<h2 id="待优化方向">待优化方向</h2>
<ol>
<li>对商品数组和商品数量数组做持久化</li>
</ol>
<h2 id="具体优化思路">具体优化思路</h2>
<h1>参考答案分析</h1>
<h1>总结</h1>
<p>有点麻烦，但没啥难度。收获不少，如下：</p>
<ol>
<li>对象数组的去重</li>
</ol>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">dedupe</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">newCart</span>:<span class="title class_">Foods</span>[] = []</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">shoppingCartArr</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params"><span class="attr">item</span>:<span class="title class_">Foods</span></span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> newCart.<span class="title function_">includes</span>(item)?<span class="string">&#x27;&#x27;</span>:newCart.<span class="title function_">push</span>(item)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">shoppingCartArr</span> = newCart</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>传值<br>
@Link</li>
</ol>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<p>@ObjectLink与@Observed</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<p>@AppStorage</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙案例</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony安全区设置</title>
    <url>/posts/8f12/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>设置安全区</h1>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法1</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">aboutToAppear</span>():<span class="title class_">Promise</span>&lt;<span class="built_in">void</span>&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> win = <span class="keyword">await</span> <span class="variable language_">window</span>.<span class="title function_">getLastWindow</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>))</span><br><span class="line">    win.<span class="title function_">setWindowLayoutFullScreen</span>(<span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line"><span class="comment">//底部若指定高度(如.height(100))会失效</span></span><br><span class="line"><span class="title class_">Image</span>(<span class="string">&#x27;https://pic3.zhimg.com/v2-37617ef484856928d1db445d493a62f7_r.jpg?source=1940ef5c&#x27;</span>)</span><br><span class="line">        .<span class="title function_">height</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">        .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">        .<span class="title function_">expandSafeArea</span>([<span class="title class_">SafeAreaType</span>.<span class="property">SYSTEM</span>],[<span class="title class_">SafeAreaEdge</span>.<span class="property">TOP</span>,<span class="title class_">SafeAreaEdge</span>.<span class="property">BOTTOM</span>])</span><br></pre></td></tr></table></figure>
<h1>获取安全区高度、宽度</h1>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">aboutToAppear</span>():<span class="title class_">Promise</span>&lt;<span class="built_in">void</span>&gt;&#123;</span><br><span class="line">   <span class="keyword">const</span> win = <span class="keyword">await</span> <span class="variable language_">window</span>.<span class="title function_">getLastWindow</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>))</span><br><span class="line">   win.<span class="title function_">setWindowLayoutFullScreen</span>(<span class="literal">true</span>)</span><br><span class="line">   <span class="comment">//顶部高度window.AvoidAreaType.TYPE_SYSTEM</span></span><br><span class="line">   <span class="comment">//底部window.AvoidAreaType.TYPE_NAVIGATION_INDICATOR</span></span><br><span class="line">   <span class="comment">//需要用px2vp转换px</span></span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">topHeight</span> = <span class="title function_">px2vp</span>(win.<span class="title function_">getWindowAvoidArea</span>(<span class="variable language_">window</span>.<span class="property">AvoidAreaType</span>.<span class="property">TYPE_SYSTEM</span>).<span class="property">topRect</span>.<span class="property">height</span>)</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">bottomHeight</span> = <span class="title function_">px2vp</span>(win.<span class="title function_">getWindowAvoidArea</span>(<span class="variable language_">window</span>.<span class="property">AvoidAreaType</span>.<span class="property">TYPE_NAVIGATION_INDICATOR</span>).<span class="property">bottomRect</span>.<span class="property">height</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//使用</span></span><br><span class="line"> <span class="title class_">Column</span>()&#123;</span><br><span class="line">   <span class="title class_">Image</span>(<span class="string">&#x27;https://pic3.zhimg.com/v2-37617ef484856928d1db445d493a62f7_r.jpg?source=1940ef5c&#x27;</span>)</span><br><span class="line">           .<span class="title function_">height</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">           .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">           .<span class="title function_">expandSafeArea</span>([<span class="title class_">SafeAreaType</span>.<span class="property">SYSTEM</span>],[<span class="title class_">SafeAreaEdge</span>.<span class="property">TOP</span>,<span class="title class_">SafeAreaEdge</span>.<span class="property">BOTTOM</span>])</span><br><span class="line">       &#125;</span><br><span class="line">   .<span class="title function_">padding</span>(&#123;<span class="attr">top</span>:<span class="variable language_">this</span>.<span class="property">topHeight</span>,<span class="attr">bottom</span>:<span class="variable language_">this</span>.<span class="property">bottomHeight</span>&#125;)</span><br><span class="line">   .<span class="title function_">width</span>(<span class="string">&quot;100%&quot;</span>)</span><br></pre></td></tr></table></figure>
<h1>问题</h1>
<h2 id="软键盘避让">软键盘避让</h2>
<p>弹出键盘时会把屏幕顶出去</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//src/main/ets/entryability/EntryAbility.ets</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">onWindowStageCreate</span>(<span class="attr">windowStage</span>: <span class="variable language_">window</span>.<span class="property">WindowStage</span>): <span class="title class_">Promise</span>&lt;<span class="built_in">void</span>&gt; &#123;</span><br><span class="line"><span class="comment">// Main window is created, set main page for this ability</span></span><br><span class="line">hilog.<span class="title function_">info</span>(<span class="number">0x0000</span>, <span class="string">&#x27;testTag&#x27;</span>, <span class="string">&#x27;%&#123;public&#125;s&#x27;</span>, <span class="string">&#x27;Ability onWindowStageCreate&#x27;</span>);</span><br><span class="line"><span class="comment">// const win = await window.getLastWindow(getContext(this))</span></span><br><span class="line"><span class="comment">// win.setWindowLayoutFullScreen(true)</span></span><br><span class="line"><span class="comment">//注意路径windowStage.loadContent(&#x27;pages/Index&#x27;,</span></span><br><span class="line">windowStage.<span class="title function_">loadContent</span>(<span class="string">&#x27;pages/Index&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//KeyboardAvoidMode是@kit.ArkUI的</span></span><br><span class="line">    windowStage.<span class="title function_">getMainWindowSync</span>().<span class="title function_">getUIContext</span>().<span class="title function_">setKeyboardAvoidMode</span>(<span class="title class_">KeyboardAvoidMode</span>.<span class="property">RESIZE</span>)</span><br><span class="line">    <span class="keyword">if</span> (err.<span class="property">code</span>) &#123;</span><br><span class="line">    hilog.<span class="title function_">error</span>(<span class="number">0x0000</span>, <span class="string">&#x27;testTag&#x27;</span>, <span class="string">&#x27;Failed to load the content. Cause: %&#123;public&#125;s&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err) ?? <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    hilog.<span class="title function_">info</span>(<span class="number">0x0000</span>, <span class="string">&#x27;testTag&#x27;</span>, <span class="string">&#x27;Succeeded in loading the content.&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//pages/Index.ets</span></span><br><span class="line"><span class="title class_">Column</span>() &#123;</span><br><span class="line">    <span class="title class_">TextInput</span>(&#123;<span class="attr">placeholder</span>:<span class="variable language_">this</span>.<span class="property">message</span>&#125;)</span><br><span class="line">    .<span class="title function_">layoutWeight</span>(<span class="number">1</span>)</span><br><span class="line">    .<span class="title function_">backgroundColor</span>(<span class="title class_">Color</span>.<span class="property">Pink</span>)</span><br><span class="line">    <span class="title class_">Image</span>(<span class="string">&#x27;https://pic3.zhimg.com/v2-37617ef484856928d1db445d493a62f7_r.jpg?source=1940ef5c&#x27;</span>)</span><br><span class="line">    .<span class="title function_">height</span>(<span class="string">&#x27;80%&#x27;</span>)</span><br><span class="line">    .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">    .<span class="title function_">expandSafeArea</span>([<span class="title class_">SafeAreaType</span>.<span class="property">SYSTEM</span>],[<span class="title class_">SafeAreaEdge</span>.<span class="property">TOP</span>,<span class="title class_">SafeAreaEdge</span>.<span class="property">BOTTOM</span>])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// .padding(&#123;top:this.topHeight,bottom:this.bottomHeight&#125;)</span></span><br><span class="line">.<span class="title function_">width</span>(<span class="string">&quot;100%&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony常用组件(1)——布局</title>
    <url>/posts/70e0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>布局</h1>
<h2 id="思路">思路</h2>
<ol>
<li>将每个组件看作盒子</li>
<li>可以通过DevEco Previewer的TT查看，也可以自己设置.borderWidth查看盒子</li>
</ol>
<h2 id="主轴与交叉轴概述">主轴与交叉轴概述</h2>
<p>两个轴相互垂直，不同容器中主轴方向不一样。如Column主轴为竖、交叉轴为横，而Row则相反。</p>
<ul>
<li>设置主轴：.justyfyContent(FlexAlign.)</li>
<li>设置交叉轴：.alignItems(HorizontalAlign/VerticalAlign.)</li>
</ul>
<h2 id="Column">Column</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Row">Row</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Row</span>(&#123;<span class="attr">space</span>:&#125;)</span><br><span class="line">    .<span class="title function_">width</span>()</span><br><span class="line">    .<span class="title function_">height</span>()</span><br><span class="line">    .<span class="title function_">alignItems</span>(<span class="title class_">VerticalAlign</span>)</span><br><span class="line">    .<span class="title function_">justifyContent</span>(<span class="title class_">FlexAlign</span> or <span class="title class_">FlexDirection</span> or <span class="title class_">FlexWarp</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Stack">Stack</h2>
<p>前面写的组件在下，后面写的在上</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Stack</span>(&#123;<span class="attr">alignContent</span>:<span class="title class_">Alignment</span>.<span class="property">Center</span>&#125;)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="RelativeContainer">RelativeContainer</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">RelativeContainer</span>() &#123;&#125;</span><br><span class="line">    .<span class="title function_">alignRules</span>(&#123;</span><br><span class="line">        <span class="attr">middle</span>: &#123;</span><br><span class="line">            <span class="attr">anchor</span>: <span class="string">&quot;__container__&quot;</span>,</span><br><span class="line">            <span class="attr">align</span>: <span class="title class_">HorizontalAlign</span>.<span class="property">Center</span></span><br><span class="line">         &#125;,</span><br><span class="line">        <span class="attr">center</span>: &#123;</span><br><span class="line">            <span class="attr">anchor</span>: <span class="string">&quot;__container__&quot;</span>,</span><br><span class="line">            <span class="attr">align</span>: <span class="title class_">VerticalAlign</span>.<span class="property">Center</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="property">layoutWeight</span></span><br><span class="line">    .<span class="title function_">id</span>(<span class="string">&#x27;xxxx&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Grid">Grid</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Grid</span>() &#123;</span><br><span class="line">  <span class="title class_">GridItem</span>() &#123;</span><br><span class="line">  <span class="title class_">Text</span>(key)</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//列从哪里开始到哪里结束</span></span><br><span class="line">    .<span class="title function_">columnStart</span>(<span class="number">1</span>)</span><br><span class="line">    .<span class="title function_">columnEnd</span>(<span class="number">2</span>)</span><br><span class="line">    <span class="comment">//行从哪里开始到哪里结束</span></span><br><span class="line">    .<span class="title function_">rowStart</span>(<span class="number">5</span>)</span><br><span class="line">    .<span class="title function_">rowEnd</span>(<span class="number">6</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//fr的个数即为网格布局的行或列数。数字表示该行或列在网格布局宽度上的占比，最终决定该行或列的宽度。</span></span><br><span class="line">.<span class="title function_">rowsTemplate</span>(<span class="string">&#x27;1fr 1fr 1fr&#x27;</span>)</span><br><span class="line">.<span class="title function_">columnsTemplate</span>(<span class="string">&#x27;1fr 2fr 1fr&#x27;</span>)</span><br><span class="line"><span class="comment">//主轴方向，以及主轴最多有几个</span></span><br><span class="line">.<span class="title function_">maxCount</span>(<span class="number">3</span>)</span><br><span class="line">.<span class="title function_">layoutDirection</span>(<span class="title class_">GridDirection</span>.<span class="property">Row</span>)</span><br><span class="line"><span class="comment">//间隔</span></span><br><span class="line">.<span class="title function_">columnsGap</span>(<span class="number">10</span>)</span><br><span class="line">.<span class="title function_">rowsGap</span>(<span class="number">15</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Flex">Flex</h2>
<p>吃性能</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Flex</span>(&#123;</span><br><span class="line">    <span class="attr">justifyContent</span>:<span class="title class_">FlexAlign</span>.<span class="property">SpaceAround</span>,</span><br><span class="line">    <span class="attr">direction</span>:<span class="title class_">FlexDirection</span>.<span class="property">Row</span>,</span><br><span class="line">    <span class="attr">wrap</span>:<span class="title class_">FlexWrap</span>.<span class="property">Wrap</span>,</span><br><span class="line">    <span class="attr">alignContent</span>:<span class="title class_">FlexAlign</span>.<span class="property">SpaceAround</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Tabs">Tabs</h2>
<p>一般用法：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Tabs</span>()&#123;</span><br><span class="line">    <span class="title class_">TabContent</span>()&#123;&#125;</span><br><span class="line">    .<span class="title function_">tabBar</span>(<span class="variable language_">this</span>.<span class="title function_">newTab</span>())</span><br><span class="line">&#125;</span><br><span class="line">.<span class="title function_">barPosition</span>(<span class="title class_">BarPosition</span>.<span class="property">End</span>)</span><br><span class="line">.<span class="title function_">scrollable</span>(<span class="literal">false</span>)</span><br><span class="line">.<span class="title function_">onChange</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">	&#125;)</span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="title function_">newTab</span>(<span class="params"></span>)&#123;&#125;</span><br></pre></td></tr></table></figure>
<p>自定义tabBar：不使用自定义导航栏时，系统默认的Tabs会实现切换逻辑。在使用了自定义导航栏后，切换页签的逻辑需要手动实现。即用户点击对应页签时，屏幕需要显示相应的内容页。</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建controller</span></span><br><span class="line">tabsController : <span class="title class_">TabsController</span> = <span class="keyword">new</span> <span class="title class_">TabsController</span>()</span><br><span class="line"><span class="meta">@State</span> <span class="attr">currentIndex</span>:<span class="built_in">number</span> = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//将controller赋予Tabs容器</span></span><br><span class="line"><span class="title class_">Tabs</span>(<span class="variable language_">this</span>.<span class="property">tabsController</span>)</span><br><span class="line"><span class="comment">//在自定义tabBar中实现切换逻辑</span></span><br><span class="line"><span class="meta">@Builder</span> <span class="title class_">TabBuilder</span>(<span class="attr">title</span>: <span class="built_in">string</span>, <span class="attr">targetIndex</span>: <span class="built_in">number</span>) &#123;</span><br><span class="line">  <span class="title class_">Column</span>() &#123;</span><br><span class="line">  ...</span><br><span class="line">  .<span class="title function_">onClick</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">currentIndex</span> = targetIndex;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">tabsController</span>.<span class="title function_">changeIndex</span>(<span class="variable language_">this</span>.<span class="property">currentIndex</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony性能优化</title>
    <url>/posts/21b1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>懒加载</h1>
<p>使用LazyForEach而不是ForEach。</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">LazyForEach</span>(<span class="variable language_">this</span>.<span class="property">data</span>, <span class="function">(<span class="params"><span class="attr">item</span>: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title class_">ListItem</span>() &#123;</span><br><span class="line">          <span class="title class_">Row</span>() &#123;</span><br><span class="line">            <span class="title class_">Text</span>(item).<span class="title function_">fontSize</span>(<span class="number">20</span>).<span class="title function_">margin</span>(&#123; <span class="attr">left</span>: <span class="number">10</span> &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">.<span class="title function_">onClick</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">pushData</span>(<span class="string">&#x27;item value: &#x27;</span> + <span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">totalCount</span>())</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;, <span class="function"><span class="params">item</span> =&gt;</span> item)      </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony权限</title>
    <url>/posts/f140/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>应用权限保护的对象</h1>
<h1>权限使用基本原则</h1>
<ul>
<li>应用（包括应用引用的三方库）所需权限必须在应用的配置文件中严格按照权限开发指导逐个声明</li>
<li>权限申请满足最小化原则，禁止申请非必要的、已废弃的权限</li>
<li>应用申请敏感权限时，必须填写权限使用理由字段</li>
<li>应用敏感权限须在对应业务功能执行前动态申请，满足隐私最小化要求</li>
<li>用户拒绝授予某个权限后，应用与此权限无关的其他业务功能应允许正常使用</li>
</ul>
<h1>授权方式</h1>
<h2 id="系统授权">系统授权</h2>
<p>在应用中申请system_grant权限。被允许访问的数据不会涉及到用户或设备的敏感信息，应用被允许执行的操作对系统或者其他应用产生的影响可控</p>
<h2 id="用户授权">用户授权</h2>
<h1>授权示例</h1>
<h2 id="定位授权">定位授权</h2>
<ol>
<li>在src/main/resources/module.json5中配置申请</li>
</ol>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;requestPermissions&quot;</span>: [&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;ohos.permission.INTERNET&quot;</span>&#125;,</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;ohos.permission.LOCATION&quot;</span>,</span><br><span class="line">  <span class="comment">//模式串需在resources/base/element/string.json中配置键值对location_reason</span></span><br><span class="line">  <span class="comment">//再按如下方式在&quot;reason&quot;中进行引用</span></span><br><span class="line">  <span class="string">&quot;reason&quot;</span> : <span class="string">&quot;$string:location_reason&quot;</span>,</span><br><span class="line">  <span class="string">&quot;usedScene&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;abilities&quot;</span>: [<span class="string">&quot;EntryAbility&quot;</span>],</span><br><span class="line">    <span class="string">&quot;when&quot;</span>: <span class="string">&quot;always&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;ohos.permission.APPROXIMATELY_LOCATION&quot;</span>,</span><br><span class="line">    <span class="string">&quot;reason&quot;</span> : <span class="string">&quot;$string:location_reason&quot;</span>,</span><br><span class="line">    <span class="string">&quot;usedScene&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;abilities&quot;</span>: [<span class="string">&quot;EntryAbility&quot;</span>],</span><br><span class="line">      <span class="string">&quot;when&quot;</span>: <span class="string">&quot;always&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>在模拟器设置中打开“系统”——“日期和时间”——“定位服务”——“访问我的位置”</li>
<li>右侧边栏中打开GPS配置GPS模拟</li>
<li>编写获取位置代码</li>
</ol>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; abilityAccessCtrl, bundleManager, common &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.AbilityKit&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; geoLocationManager &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.LocationKit&#x27;</span>;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getLocation</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> manager = abilityAccessCtrl.<span class="title function_">createAtManager</span>()</span><br><span class="line">    <span class="comment">//上下文获取</span></span><br><span class="line">    <span class="comment">//1. page中getContext</span></span><br><span class="line">    <span class="comment">//2. Ability中this.context</span></span><br><span class="line">    <span class="keyword">await</span> manager.<span class="title function_">requestPermissionsFromUser</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>),[</span><br><span class="line">      <span class="string">&quot;ohos.permission.LOCATION&quot;</span>,</span><br><span class="line">      <span class="string">&quot;ohos.permission.APPROXIMATELY_LOCATION&quot;</span></span><br><span class="line">    ])</span><br><span class="line">    <span class="keyword">const</span> bundleInfo = bundleManager.<span class="title function_">getBundleInfoForSelfSync</span>(bundleManager.<span class="property">BundleFlag</span>.<span class="property">GET_BUNDLE_INFO_WITH_APPLICATION</span>)</span><br><span class="line">    <span class="keyword">const</span> accTokenId = bundleInfo.<span class="property">appInfo</span>.<span class="property">accessTokenId</span></span><br><span class="line">    <span class="keyword">const</span> state = manager.<span class="title function_">checkAccessTokenSync</span>(accTokenId,<span class="string">&quot;ohos.permission.LOCATION&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span>(state == abilityAccessCtrl.<span class="property">GrantStatus</span>.<span class="property">PERMISSION_DENIED</span>)&#123;</span><br><span class="line">      <span class="keyword">let</span> abilityContext = <span class="title function_">getContext</span>(<span class="variable language_">this</span>) <span class="keyword">as</span> common.<span class="property">UIAbilityContext</span></span><br><span class="line">      abilityContext.<span class="title function_">startAbility</span>(&#123;</span><br><span class="line">        <span class="attr">bundleName</span>:<span class="string">&#x27;com.huawei.hmos.settings&#x27;</span>,</span><br><span class="line">        <span class="attr">abilityName</span>:<span class="string">&#x27;com.huawei.hmos.settings.MainAbility&#x27;</span>,</span><br><span class="line">        <span class="attr">uri</span>:<span class="string">&#x27;application_info_entry&#x27;</span>,</span><br><span class="line">        <span class="attr">parameters</span>:&#123;</span><br><span class="line">          <span class="attr">pushParams</span>:bundleInfo.<span class="property">name</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="title class_">AlertDialog</span>.<span class="title function_">show</span>(&#123;<span class="attr">message</span>:<span class="string">&quot;agree&quot;</span>&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>获取位置信息</li>
</ol>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; geoLocationManager &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.LocationKit&#x27;</span>;</span><br><span class="line">geoLocationManager.<span class="title function_">getCurrentLocation</span>()</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">              <span class="title class_">AlertDialog</span>.<span class="title function_">show</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;$&#123;JSON.stringify(val)&#125;&#x27;</span> &#125;)</span><br><span class="line">            &#125;)</span><br></pre></td></tr></table></figure>
<ol start="6">
<li>封装工具类<br>
tips:alt+shift+enter</li>
</ol>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//RequestPermisssionUtils</span></span><br><span class="line"><span class="keyword">import</span> &#123; abilityAccessCtrl, bundleManager, common, <span class="title class_">Permissions</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.AbilityKit&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getLocation</span>(<span class="params"><span class="attr">context</span>: <span class="title class_">Context</span>, <span class="attr">callback</span>: () =&gt; <span class="built_in">void</span>, <span class="attr">permission</span>: <span class="title class_">Permissions</span>[]</span>)&#123;</span><br><span class="line">  <span class="keyword">const</span> manager = abilityAccessCtrl.<span class="title function_">createAtManager</span>()</span><br><span class="line">  <span class="comment">//上下文获取</span></span><br><span class="line">  <span class="comment">//1. page中getContext</span></span><br><span class="line">  <span class="comment">//2. Ability中this.context</span></span><br><span class="line">  <span class="keyword">await</span> manager.<span class="title function_">requestPermissionsFromUser</span>(context,[</span><br><span class="line">    <span class="string">&quot;ohos.permission.LOCATION&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ohos.permission.APPROXIMATELY_LOCATION&quot;</span></span><br><span class="line">  ])</span><br><span class="line">  <span class="keyword">const</span> bundleInfo = bundleManager.<span class="title function_">getBundleInfoForSelfSync</span>(bundleManager.<span class="property">BundleFlag</span>.<span class="property">GET_BUNDLE_INFO_WITH_APPLICATION</span>)</span><br><span class="line">  <span class="keyword">const</span> accTokenId = bundleInfo.<span class="property">appInfo</span>.<span class="property">accessTokenId</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> state = manager.<span class="title function_">checkAccessTokenSync</span>(accTokenId,permission[<span class="number">0</span>])</span><br><span class="line">  <span class="keyword">if</span>(state == abilityAccessCtrl.<span class="property">GrantStatus</span>.<span class="property">PERMISSION_DENIED</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> abilityContext = context <span class="keyword">as</span> common.<span class="property">UIAbilityContext</span></span><br><span class="line">    abilityContext.<span class="title function_">startAbility</span>(&#123;</span><br><span class="line">      <span class="attr">bundleName</span>:<span class="string">&#x27;com.huawei.hmos.settings&#x27;</span>,</span><br><span class="line">      <span class="attr">abilityName</span>:<span class="string">&#x27;com.huawei.hmos.settings.MainAbility&#x27;</span>,</span><br><span class="line">      <span class="attr">uri</span>:<span class="string">&#x27;application_info_entry&#x27;</span>,</span><br><span class="line">      <span class="attr">parameters</span>:&#123;</span><br><span class="line">        <span class="attr">pushParams</span>:bundleInfo.<span class="property">name</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_">callback</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony基本原理(1)——框架结构</title>
    <url>/posts/fdb3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>OpenHarmony框架</h1>
<p><img src="/source/Harmony/OH_Frame.png" alt="OpenHarmony框架" title="OpenHarmony框架"></p>
<ul>
<li>系统功能按照“系统 &gt; 子系统 &gt; 组件”逐级展开<br>
层级|功能<br>
-----|-----<br>
应用层|包括系统应用和第三方非系统应用<br>应用由一个或多个FA（Feature Ability）或PA（Particle Ability）组成<br>其中，FA有UI界面，提供与用户交互的能力；而PA无UI界面，提供后台运行任务的能力以及统一的数据访问抽象<br>基于FA/PA开发的应用，能够实现特定的业务功能，支持跨设备调度与分发，为用户提供一致、高效的应用体验。<br>
框架层|为应用开发提供C/C++/JS等多语言的用户程序框架和Ability框架，适用于JS语言的ArkUI框架，以及各种软硬件服务对外开放的多语言框架API<br>根据系统的组件化裁剪程度，设备支持的API也会有所不同。<br>
系统服务层|OpenHarmony 的核心能力集合，通过框架层对应用程序提供服务<br>1. 系统基本能力子系统集：为分布式应用在多设备上的运行、调度、迁移等操作提供了基础能力，由分布式软总线、分布式数据管理、分布式任务调度、公共基础库、多模输入、图形、安全、AI等子系统组成<br>2. 基础软件服务子系统集：提供公共的、通用的软件服务，由事件通知、电话、多媒体、DFX（Design For X） 等子系统组成。<br>3. 增强软件服务子系统集：提供针对不同设备的、差异化的能力增强型软件服务，由智慧屏专有业务、穿戴专有业务、IoT专有业务等子系统组成。<br>4. 硬件服务子系统集：提供硬件服务，由位置服务、用户IAM、穿戴专有硬件服务、IoT专有硬件服务等子系统组成。<br>根据不同设备形态的部署环境，基础软件服务子系统集、增强软件服务子系统集、硬件服务子系统集内部可以按子系统粒度裁剪，每个子系统内部又可以按功能粒度裁剪<br>
内核层|内核子系统：采用多内核（Linux内核或者LiteOS）设计，支持针对不同资源受限设备选用适合的OS内核。内核抽象层（KAL，Kernel Abstract Layer）通过屏蔽多内核差异，对上层提供基础的内核能力，包括进程/线程管理、内存管理、文件系统、网络管理和外设管理等。<br>驱动子系统：驱动框架（HDF）是系统硬件生态开放的基础，提供统一外设访问能力和驱动开发、管理框架。</li>
</ul>
<h1>ArkUI</h1>
<p><img src="/source/Harmony/ArkUI_Frame.png" alt="ArkUI框架" title="ArkUI框架"></p>
<h1>DevEco项目结构</h1>
]]></content>
      <tags>
        <tag>鸿蒙基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony媒体相关</title>
    <url>/posts/86c4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>媒体组件</h1>
<h2 id="Video">Video</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">controller</span>:<span class="title class_">VideoController</span>=<span class="keyword">new</span> <span class="title class_">VideoController</span>()</span><br><span class="line"><span class="title class_">Video</span>(&#123;<span class="attr">src</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">currentProgressRate</span>:<span class="variable language_">this</span>.<span class="property">speed</span>,<span class="attr">controller</span>:<span class="variable language_">this</span>.<span class="property">controller</span>&#125;)</span><br><span class="line">    .<span class="title function_">controls</span>(<span class="literal">false</span>)</span><br><span class="line">    .<span class="title function_">onPrepared</span>(<span class="function">(<span class="params">value</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">currentPlayIndex</span>==<span class="variable language_">this</span>.<span class="property">currentIndex</span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">controller</span>.<span class="title function_">start</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">controller</span>.<span class="title function_">start</span>()</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">controller</span>.<span class="title function_">pause</span>()</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony最佳实践</title>
    <url>/posts/e1d9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony基本原理(2)——Stage模型</title>
    <url>/posts/8aee/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>应用程序包</h1>
<ul>
<li>应用所对应的软件包文件，称为“应用程序包”</li>
<li>系统提供了应用程序包开发、安装、查询、更新、卸载的管理机制</li>
<li>系统还屏蔽了不同的芯片平台的差异</li>
</ul>
<h1>多Module设计机制</h1>
<h2 id="模块化开发">模块化开发</h2>
<ul>
<li>应用通常会包含多种功能，将每个功能模块作为一个独立的Module进行开发</li>
<li>可以包含源代码、资源文件、第三方库、配置文件等</li>
<li>Module可以独立编译，实现特定的功能</li>
</ul>
<h2 id="多设备适配">多设备适配</h2>
<h1>Stage模型概述</h1>
<h2 id="概述">概述</h2>
<p>Stage模型是</p>
<blockquote>
<ol>
<li>Stage模型中，多个应用组件共享同一个ArkTS引擎实例，在Stage模型中，应用组件之间可以方便的共享对象和状态，同时减少复杂应用运行对内存的占用。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Stage模型](https://developer.huawei.com/consumer/cn/arkui/arkui-stage)
">[1]</span></a></sup></li>
<li>Stage模型提供了AbilityStage、WindowStage等类作为应用组件和Window窗口的“舞台”，因此称这种应用模型为Stage模型。</li>
</ol>
</blockquote>
<h2 id="设计思路">设计思路</h2>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden>
  flowchart TB;
    target1((应用能力与系统性能平衡))
    target2((原生支持组件级迁移与协同))
    target3((支持多设备、多窗口))
    method1[Ability与UI分离]
    method2[后台管理]
    method3[基于场景的服务机制]
    method4[单进程模型]
    method5[UI与服务统一的Ability组件]
    method6[Ability生命周期定义]
    method7[组件管理与窗口管理解耦]
    target1--&gt;method1
    target1--&gt;method2
    target1--&gt;method3
    target1--&gt;method4
    target2--&gt;method1
    target2--&gt;method5
    target3--&gt;method6
    target3--&gt;method7
  </pre></div>
<h1>整体结构</h1>
<p><img src="/Harmony/ui-qt.jpg" alt="Stage模型" title="Stage模型"></p>
<h2 id="各类组件">各类组件</h2>
<p>Satge模型提供UIAbility和ExtensionAbility两种组件，有具体类承载，支持面向对象。<br>
其中，UIAbility、ExtensionAbility等组件详情如下：</p>
<h3 id="UIAbility组件">UIAbility组件</h3>
<ul>
<li>包含UI的应用组件，主要用于和用户交互</li>
<li>生命周期只包含创建/销毁/前台/后台等状态</li>
</ul>
<h3 id="ExtensionAbility组件">ExtensionAbility组件</h3>
<ul>
<li>面向特定场景的应用组件</li>
<li>需要使用ExtensionAbility的派生类</li>
<li>ExtensionAbility派生类实例由用户触发创建，并由系统管理<em>生命周期</em></li>
</ul>
<h3 id="WindowStage类">WindowStage类</h3>
<ul>
<li>与显示相关的状态通过WindowStage的事件暴露给开发者</li>
<li>每个UIAbility类实例都会与一个WindowStage类实例绑定</li>
<li>提供了应用进程内窗口管理器的作用</li>
<li>包含一个主窗口。UIAbility通过WindowStage持有了一个主窗口，该主窗口为ArkUI提供了绘制区域</li>
</ul>
<h3 id="Context">Context</h3>
<ul>
<li>Context及其派生类向开发者提供在运行期可以调用的各种资源和能力</li>
<li>UIAbility组件和各种ExtensionAbility派生类都有各自不同的Context类</li>
</ul>
<h3 id="AbilityStage">AbilityStage</h3>
<ul>
<li>每个Entry类型或者Feature类型的HAP在运行期都有一个AbilityStage类实例</li>
<li>HAP中的代码首次被加载到进程中的时候，系统会先创建AbilityStage实例</li>
<li>每个在该HAP中定义的UIAbility类，在实例化后都会与该实例产生关联</li>
<li>可通过AbilityStage获取该HAP中UIAbility实例的运行时信息</li>
</ul>
<h2 id="Stage模型开发流程">Stage模型开发流程</h2>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden>
  flowchart LR
    A[应用组件开发] --&gt; B[进程模型]
    B --&gt;  C[线程模型]
    C --&gt; D[应用配置]
  </pre></div>
<h1>相关概念补充</h1>
<h2 id="HAP-Harmony-Ability-Package">HAP(Harmony Ability Package)</h2>
<ul>
<li>应用安装与运行的单元</li>
<li>将code、resources、config、std library等打包为模块</li>
<li>分为entry(应用入口、基础功能)和feature(动态特性)两类</li>
<li>单个HAP(无ExtensionAbility)：1个Entry+m个feature。推荐1个UIAbility+m个页面</li>
<li>多个HAP：n个Entry+m个feature。每个HAP1个UIAbility或ExtensionAbility</li>
</ul>
<h2 id="HAR-HarmonyOS-Ability-Resource-sup-id-fnref-2-a-href-fn-2-rel-footnote-span-class-hint-top-hint-error-hint-medium-hint-rounded-hint-bounce-aria-label-HAR-https-blog-csdn-net-u014696856-article-details-142211942-2-span-a-sup">HAR(HarmonyOS Ability Resource)<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[HAR](https://blog.csdn.net/u014696856/article/details/142211942)">[2]</span></a></sup></h2>
<ul>
<li>静态共享包，用于封装和共享代码、资源和第三方库，允许开发者将独立的功能模块打包并发布为一个可重用的单元</li>
<li>不仅可以包含代码文件，还可以包括UI布局、图片、配置文件、第三方库等资源</li>
<li>实现代码的模块化和复用</li>
</ul>
<h2 id="HSP-Harmony-Shared-Package">HSP(Harmony Shared Package)</h2>
<ul>
<li>动态共享包</li>
<li>与宿主应用同进程、命名空间、生命周期</li>
</ul>
<hr>
<h1>参考文献：</h1>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://developer.huawei.com/consumer/cn/arkui/arkui-stage">Stage模型</a><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://blog.csdn.net/u014696856/article/details/142211942">HAR</a><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <tags>
        <tag>鸿蒙基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony常用组件(2)——其他</title>
    <url>/posts/e93f/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>其他</h1>
<h2 id="遍历组件">遍历组件</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">ForEach</span>(<span class="variable language_">this</span>.<span class="property">list</span>,(<span class="attr">item</span>:<span class="title class_">Type</span>,idx)=&#123;</span><br><span class="line">	<span class="title function_">myComponent</span>(&#123;<span class="attr">myVal</span>:item&#125;) </span><br><span class="line">&#125;)</span><br><span class="line">struct myComponet&#123;</span><br><span class="line">	<span class="attr">myVal</span>:<span class="variable constant_">TYPE</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Button">Button</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Button</span>(<span class="string">&#x27;sss&#x27;</span>)</span><br><span class="line">    .<span class="title function_">enabled</span>(<span class="variable language_">this</span>.<span class="property">isSelect</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Checkbox">Checkbox</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Checkbox</span>()</span><br><span class="line">    .<span class="title function_">select</span>($$this.<span class="property">isSelect</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Refresh">Refresh</h2>
<p>下拉刷新</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Refresh</span>(&#123;</span><br><span class="line">    <span class="attr">refreshing</span>:$$this.<span class="property">isRefresh</span>,</span><br><span class="line">    <span class="attr">builder</span>:<span class="variable language_">this</span>.<span class="title class_">Refresh</span>()&#125;)&#123;</span><br><span class="line">&#125;</span><br><span class="line">.<span class="title function_">onRefreshing</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">	    <span class="variable language_">this</span>.<span class="title function_">changeRefreshLoading</span>()</span><br><span class="line">	    <span class="title class_">AlertDialog</span>.<span class="title function_">show</span>(&#123;<span class="attr">message</span>:<span class="string">&#x27;ok&#x27;</span>&#125;)</span><br><span class="line">    &#125;,<span class="number">200</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="title class_">Refresh</span>()&#123;</span><br><span class="line">	<span class="title class_">Progress</span>(&#123;</span><br><span class="line">		<span class="attr">value</span>:<span class="variable language_">this</span>.<span class="property">freshVal</span>,</span><br><span class="line">		<span class="attr">total</span>:<span class="number">100</span>,</span><br><span class="line">		<span class="attr">type</span>:<span class="title class_">ProgressType</span>.<span class="property">Ring</span></span><br><span class="line">	&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="TextTimer">TextTimer</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">textTimerController</span>: <span class="title class_">TextTimerController</span> = <span class="keyword">new</span> <span class="title class_">TextTimerController</span>()</span><br><span class="line"><span class="title class_">TextTimer</span>(&#123; <span class="attr">isCountDown</span>: <span class="literal">false</span>, <span class="attr">controller</span>: <span class="variable language_">this</span>.<span class="property">textTimerController</span> &#125;)</span><br><span class="line">	.<span class="title function_">format</span>(<span class="variable language_">this</span>.<span class="property">format</span>)</span><br><span class="line">	.<span class="title function_">fontSize</span>(<span class="number">15</span>)</span><br><span class="line">	.<span class="title function_">margin</span>(&#123;<span class="attr">top</span>:<span class="number">20</span>&#125;)</span><br><span class="line">	.<span class="title function_">fontWeight</span>(<span class="title class_">FontWeight</span>.<span class="property">Bold</span>)</span><br><span class="line">    .<span class="title function_">onTimer</span>(<span class="function">(<span class="params"><span class="attr">utc</span>: <span class="built_in">number</span>, <span class="attr">elapsedTime</span>: <span class="built_in">number</span></span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">textTimerController</span>.<span class="title function_">reset</span>()</span><br></pre></td></tr></table></figure>
<h2 id="Search">Search</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Search</span>()</span><br></pre></td></tr></table></figure>
<h2 id="Text">Text</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Text</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="title function_">toString</span>())</span><br><span class="line">	.<span class="title function_">textOverflow</span>(&#123; <span class="attr">overflow</span>: <span class="title class_">TextOverflow</span>.<span class="property">None</span> &#125;)</span><br><span class="line">	.<span class="title function_">maxLines</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Scroll">Scroll</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">scroller</span>:<span class="title class_">Scroller</span> = <span class="keyword">new</span> <span class="title class_">Scroller</span>()</span><br><span class="line"> <span class="title class_">Scroll</span>(<span class="variable language_">this</span>.<span class="property">scroller</span>) &#123;</span><br><span class="line"> 	</span><br><span class="line"> &#125;</span><br><span class="line">    .<span class="title function_">scrollable</span>(<span class="title class_">ScrollDirection</span>.<span class="property">Vertical</span>) </span><br><span class="line">    .<span class="title function_">scrollBar</span>(<span class="title class_">BarState</span>.<span class="property">On</span>) </span><br><span class="line">    .<span class="title function_">scrollBarColor</span>(<span class="title class_">Color</span>.<span class="property">Gray</span>) </span><br><span class="line">    .<span class="title function_">scrollBarWidth</span>(<span class="number">10</span>) </span><br><span class="line">    .<span class="title function_">edgeEffect</span>(<span class="title class_">EdgeEffect</span>.<span class="property">Spring</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Swiper">Swiper</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">swiperController</span>: <span class="title class_">SwiperController</span> = <span class="keyword">new</span> <span class="title class_">SwiperController</span>()</span><br><span class="line"><span class="title class_">Swiper</span>()</span><br><span class="line">  .<span class="title function_">index</span>($$this.<span class="property">idx</span>)</span><br><span class="line">  .<span class="title function_">autoPlay</span>(<span class="literal">false</span>)</span><br><span class="line">  .<span class="title function_">indicator</span>(<span class="literal">false</span>)</span><br></pre></td></tr></table></figure>
<h2 id="TextInput">TextInput</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">TextInput</span>(&#123;<span class="attr">placeholder</span>:<span class="string">&#x27;&#x27;</span>,<span class="attr">text</span>:&amp;&amp;<span class="variable language_">this</span>.<span class="property">message</span>&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Divider">Divider</h2>
<p>下划线</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Divider</span>()</span><br></pre></td></tr></table></figure>
<h2 id="Image">Image</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Image</span>()</span><br><span class="line">    .<span class="title function_">borderRadius</span>()<span class="comment">//more large,more circle</span></span><br><span class="line">	.<span class="title function_">onAreaChange</span>((<span class="attr">oldValue</span>: <span class="title class_">Area</span>, <span class="attr">newValue</span>: <span class="function"><span class="params">Area</span>=&gt;</span> &#123;</span><br><span class="line">	     <span class="title class_">AlertDialog</span>.<span class="title function_">show</span>(&#123;</span><br><span class="line">            <span class="attr">message</span>:<span class="string">&#x27;f&#x27;</span>+newValue.<span class="property">width</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;))</span><br></pre></td></tr></table></figure>
<h2 id="弹窗">弹窗</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//showToast</span></span><br><span class="line">promptAction.<span class="title function_">showToast</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;nreivn&#x27;</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//AlertDialog</span></span><br><span class="line"><span class="title class_">AlertDialog</span>.<span class="title function_">show</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">//@customDialog</span></span><br><span class="line"><span class="comment">////父：</span></span><br><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">  <span class="attr">controller</span>: <span class="title class_">CustomDialogController</span> = <span class="keyword">new</span> <span class="title class_">CustomDialogController</span>(&#123;</span><br><span class="line">    <span class="attr">builder</span>: <span class="title class_">Son1</span>(),</span><br><span class="line">    <span class="attr">autoCancel</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// alignment: DialogAlignment.Bottom,</span></span><br><span class="line">    <span class="attr">offset</span>: &#123; <span class="attr">dx</span>: <span class="number">0</span>, <span class="attr">dy</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    <span class="comment">// gridCount: 4,s</span></span><br><span class="line">    <span class="attr">customStyle</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// backgroundColor: 0xd9ffffff,</span></span><br><span class="line">    <span class="attr">cornerRadius</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">width</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">    <span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// borderStyle: BorderStyle.Dashed,//使用borderStyle属性，需要和borderWidth属性一起使用</span></span><br><span class="line">    <span class="comment">// borderColor: Color.Blue,//使用borderColor属性，需要和borderWidth属性一起使用</span></span><br><span class="line">    <span class="comment">// shadow: (&#123; radius: 20, color: Color.Grey, offsetX: 50, offsetY: 0&#125;),</span></span><br><span class="line">  &#125;)</span><br><span class="line">	<span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">		<span class="variable language_">this</span>.<span class="property">controller</span>.<span class="title function_">open</span>()</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//嵌套弹窗</span></span><br><span class="line"><span class="comment">////子1：</span></span><br><span class="line"><span class="meta">@CustomDialog</span></span><br><span class="line"><span class="keyword">export</span> struct <span class="title class_">Son1</span>&#123;</span><br><span class="line">  <span class="title class_">Controller1</span>: <span class="title class_">CustomDialogController</span> = <span class="keyword">new</span> <span class="title class_">CustomDialogController</span>(&#123;</span><br><span class="line">    <span class="attr">builder</span>: <span class="title class_">Son1</span>(),</span><br><span class="line">    <span class="attr">autoCancel</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// alignment: DialogAlignment.Bottom,</span></span><br><span class="line">    <span class="attr">offset</span>: &#123; <span class="attr">dx</span>: <span class="number">0</span>, <span class="attr">dy</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    <span class="comment">// gridCount: 4,</span></span><br><span class="line">    <span class="attr">customStyle</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// backgroundColor: 0xd9ffffff,</span></span><br><span class="line">    <span class="attr">cornerRadius</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">width</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">    <span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// borderStyle: BorderStyle.Dashed,//使用borderStyle属性，需要和borderWidth属性一起使用</span></span><br><span class="line">    <span class="comment">// borderColor: Color.Blue,//使用borderColor属性，需要和borderWidth属性一起使用</span></span><br><span class="line">    <span class="comment">// shadow: (&#123; radius: 20, color: Color.Grey, offsetX: 50, offsetY: 0&#125;),</span></span><br><span class="line">  &#125;)</span><br><span class="line">   <span class="title class_">Controller2</span>: <span class="title class_">CustomDialogController</span> = <span class="keyword">new</span> <span class="title class_">CustomDialogController</span>(&#123;</span><br><span class="line">    <span class="attr">builder</span>: <span class="title class_">Son2</span>(),</span><br><span class="line">    <span class="attr">autoCancel</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// alignment: DialogAlignment.Bottom,</span></span><br><span class="line">    <span class="attr">offset</span>: &#123; <span class="attr">dx</span>: <span class="number">0</span>, <span class="attr">dy</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    <span class="comment">// gridCount: 4,</span></span><br><span class="line">    <span class="attr">customStyle</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// backgroundColor: 0xd9ffffff,</span></span><br><span class="line">    <span class="attr">cornerRadius</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">width</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">    <span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// borderStyle: BorderStyle.Dashed,//使用borderStyle属性，需要和borderWidth属性一起使用</span></span><br><span class="line">    <span class="comment">// borderColor: Color.Blue,//使用borderColor属性，需要和borderWidth属性一起使用</span></span><br><span class="line">    <span class="comment">// shadow: (&#123; radius: 20, color: Color.Grey, offsetX: 50, offsetY: 0&#125;),</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">	 <span class="variable language_">this</span>.<span class="property">Controller1</span>.<span class="title function_">close</span>()</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">controller2</span>.<span class="title function_">open</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">////子2：</span></span><br><span class="line"><span class="meta">@CustomDialog</span></span><br><span class="line"><span class="keyword">export</span> struct <span class="title class_">Son2</span>&#123;</span><br><span class="line">  <span class="attr">dialogController</span>: <span class="title class_">CustomDialogController</span> = <span class="keyword">new</span> <span class="title class_">CustomDialogController</span>(&#123;</span><br><span class="line">    <span class="attr">builder</span>: <span class="title class_">Son2</span>(),</span><br><span class="line">    <span class="attr">autoCancel</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// alignment: DialogAlignment.Bottom,</span></span><br><span class="line">    <span class="attr">offset</span>: &#123; <span class="attr">dx</span>: <span class="number">0</span>, <span class="attr">dy</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    <span class="comment">// gridCount: 4,</span></span><br><span class="line">    <span class="attr">customStyle</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// backgroundColor: 0xd9ffffff,</span></span><br><span class="line">    <span class="attr">cornerRadius</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">width</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="string">&#x27;100%&#x27;</span>,</span><br><span class="line">    <span class="attr">borderWidth</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// borderStyle: BorderStyle.Dashed,//使用borderStyle属性，需要和borderWidth属性一起使用</span></span><br><span class="line">    <span class="comment">// borderColor: Color.Blue,//使用borderColor属性，需要和borderWidth属性一起使用</span></span><br><span class="line">    <span class="comment">// shadow: (&#123; radius: 20, color: Color.Grey, offsetX: 50, offsetY: 0&#125;),</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">	 <span class="variable language_">this</span>.<span class="property">dialogController</span>.<span class="title function_">close</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自定义</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony通用信息(2)——通用事件</title>
    <url>/posts/68be/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>通用事件</h1>
<h2 id="点击">点击</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//distanceThreshold参数作为点击事件移动阈值，当手指的移动距离超出所设置的点击手势移动阈值时，点击手势识别失败</span></span><br><span class="line"><span class="comment">//distanceThreshold默认值：2^31-1</span></span><br><span class="line"><span class="title function_">onClick</span>(<span class="attr">event</span>: <span class="title class_">Callback</span>&lt;<span class="title class_">ClickEvent</span>&gt;, <span class="attr">distanceThreshold</span>: <span class="built_in">number</span>): T</span><br></pre></td></tr></table></figure>
<h2 id="触摸">触摸</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当手指在组件上按下、滑动、抬起时触发。</span></span><br><span class="line"><span class="title function_">onTouch</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">TouchEvent</span></span>) =&gt;</span> <span class="built_in">void</span>): T</span><br><span class="line"><span class="comment">//该接口只能在TouchEvent中调用</span></span><br><span class="line"><span class="comment">//通过该接口获取触发onTouch时当前帧历史点的相关信息。</span></span><br><span class="line"><span class="comment">//onTouch一帧只会调用一次，若当前帧收到的TouchEvent大于1，会将该帧最后一个点通过onTouch返还，剩余点作为历史点</span></span><br><span class="line"><span class="title function_">getHistoricalPoints</span>(): <span class="title class_">Array</span>&lt;<span class="title class_">HistoricalPoint</span>&gt;</span><br></pre></td></tr></table></figure>
<h2 id="挂载卸载">挂载卸载</h2>
<p>组件从组件树上挂载、卸载时触发的事件。</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//组件挂载至组件树时触发此回调。</span></span><br><span class="line"><span class="comment">//回调的调用时机一定在组件布局渲染之前</span></span><br><span class="line"><span class="comment">//不允许在回调中对组件树进行变更</span></span><br><span class="line"><span class="comment">//T表示返回当前组件。</span></span><br><span class="line"><span class="title function_">onAttach</span>(<span class="attr">callback</span>: <span class="title class_">Callback</span>&lt;<span class="built_in">void</span>&gt;): T</span><br><span class="line"><span class="comment">//组件从组件树卸载时触发此回调</span></span><br><span class="line"><span class="title function_">onDetach</span>(<span class="attr">callback</span>: <span class="title class_">Callback</span>&lt;<span class="built_in">void</span>&gt;): T</span><br><span class="line"><span class="comment">//组件挂载显示后触发此回调</span></span><br><span class="line"><span class="comment">//回调的调用时机有可能发生在组件布局渲染后</span></span><br><span class="line"><span class="title function_">onAppear</span>(<span class="attr">event</span>: <span class="function">() =&gt;</span> <span class="built_in">void</span>): T</span><br><span class="line"><span class="comment">//组件卸载消失时触发此回调。</span></span><br><span class="line"><span class="title function_">onDisAppear</span>(<span class="attr">event</span>: <span class="function">() =&gt;</span> <span class="built_in">void</span>): T</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="拖拽">拖拽</h2>
<p>可通过将draggable属性设置为true达成拖拽功能的组件有：</p>
<ul>
<li>默认支持拖出能力的组件（可从组件上拖出数据）：Search、TextInput、TextArea、RichEditor、Text、Image、Hyperlink</li>
<li>默认支持拖入能力的组件（目标组件可响应拖入数据）：Search、TextInput、TextArea、Video<br>
其他组件需要开发者将draggable属性设置为true，并在onDragStart等接口中实现数据传输相关内容，才能正确处理拖拽</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第一次拖拽此事件绑定的组件时，长按时间 &gt;= 500ms，然后手指移动距离 &gt;= 10vp，触发回调</span></span><br><span class="line"><span class="title function_">onDragStart</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">DragEvent</span>, extraParams?: <span class="built_in">string</span></span>) =&gt;</span> <span class="title class_">CustomBuilder</span> | <span class="title class_">DragItemInfo</span>)</span><br><span class="line"><span class="comment">//拖拽进入组件范围内时，触发回调，当监听了onDrop事件时，此事件才有效</span></span><br><span class="line"><span class="title function_">onDragEnter</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">DragEvent</span>, extraParams?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>)</span><br><span class="line"><span class="comment">//拖拽在组件范围内移动时，触发回调，当监听了onDrop事件时，此事件才有效</span></span><br><span class="line"><span class="title function_">onDragMove</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">DragEvent</span>, extraParams?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>)</span><br><span class="line"><span class="comment">//拖拽离开组件范围内时，触发回调，当监听了onDrop事件时，此事件才有效</span></span><br><span class="line"><span class="title function_">onDragLeave</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">DragEvent</span>, extraParams?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>)</span><br><span class="line"><span class="comment">//在本组件范围内停止拖拽行为时，触发回调</span></span><br><span class="line"><span class="title function_">onDrop</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">DragEvent</span>, extraParams?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>)</span><br><span class="line"><span class="comment">//绑定此事件的组件触发的拖拽结束后，触发回调</span></span><br><span class="line"><span class="title function_">onDragEnd</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">DragEvent</span>, extraParams?: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>)</span><br><span class="line"><span class="comment">//绑定此事件的组件，当触发拖拽发起前的不同阶段时，触发回调</span></span><br><span class="line"><span class="title function_">onPreDrag</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">preDragStatus</span>: <span class="title class_">PreDragStatus</span></span>) =&gt;</span> <span class="built_in">void</span>)</span><br></pre></td></tr></table></figure>
<h2 id="按键">按键</h2>
<p>按键事件指组件与键盘、遥控器等按键设备交互时触发的事件</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//绑定该方法的组件获焦后，按键动作触发该回调</span></span><br><span class="line"><span class="title function_">onKeyEvent</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">KeyEvent</span></span>) =&gt;</span> <span class="built_in">void</span>): T</span><br><span class="line"><span class="comment">//绑定该方法的组件获焦后，按键动作优先触发该回调</span></span><br><span class="line"><span class="comment">//回调的返回值为true时，视作该按键事件已被消费，后续的事件回调（keyboardShortcut、输入法事件、onKeyEvent）会被拦截，不再触发</span></span><br><span class="line"><span class="title function_">onKeyPreIme</span>(<span class="attr">event</span>: <span class="title class_">Callback</span>&lt;<span class="title class_">KeyEvent</span>, <span class="built_in">boolean</span>&gt;): T</span><br></pre></td></tr></table></figure>
<h2 id="焦点">焦点</h2>
<p>焦点事件指页面焦点在可获焦组件间移动时触发的事件</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当前组件获取焦点时触发的回调</span></span><br><span class="line"><span class="title function_">onFocus</span>(<span class="attr">event</span>: <span class="function">() =&gt;</span> <span class="built_in">void</span>)</span><br><span class="line"><span class="comment">//当前组件失去焦点时触发的回调</span></span><br><span class="line"><span class="title function_">onBlur</span>(<span class="attr">event</span>:<span class="function">() =&gt;</span> <span class="built_in">void</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="鼠标">鼠标</h2>
<p>在鼠标的单个动作触发多个事件时，事件的顺序是固定的，鼠标事件默认透传</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当前组件被鼠标按键点击时或者鼠标在组件上悬浮移动时，触发该回调</span></span><br><span class="line"><span class="title function_">onMouse</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">event</span>: <span class="title class_">MouseEvent</span></span>) =&gt;</span> <span class="built_in">void</span>)</span><br></pre></td></tr></table></figure>
<h2 id="悬浮">悬浮</h2>
<p>鼠标滑动，或者手写笔在屏幕上悬浮移动扫过组件时触发</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//鼠标或手写笔进入或退出组件时触发hover事件</span></span><br><span class="line"><span class="title function_">onHover</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">isHover</span>: <span class="built_in">boolean</span>, <span class="attr">event</span>: <span class="title class_">HoverEvent</span></span>) =&gt;</span> <span class="built_in">void</span>): T</span><br></pre></td></tr></table></figure>
<h2 id="无障碍悬浮">无障碍悬浮</h2>
<p>开启无障碍模式后，Touch事件会转换为无障碍悬浮事件</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//开启无障碍模式后，单指触摸绑定该回调的组件时触发该回调</span></span><br><span class="line"><span class="title function_">onAccessibilityHover</span>(<span class="attr">callback</span>: <span class="title class_">AccessibilityCallback</span>): T</span><br><span class="line"><span class="comment">//提供开启无障碍模式后的无障碍悬浮回调事件类型</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">AccessibilityCallback</span> = <span class="function">(<span class="params"><span class="attr">isHover</span>: <span class="built_in">boolean</span>, <span class="attr">event</span>: <span class="title class_">AccessibilityHoverEvent</span></span>) =&gt;</span> <span class="built_in">void</span></span><br></pre></td></tr></table></figure>
<h2 id="组件区域变化">组件区域变化</h2>
<p>组件区域变化事件指组件显示的尺寸、位置等发生变化时触发的事件</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//组件区域变化时触发该回调</span></span><br><span class="line"><span class="comment">//仅会响应由布局变化所导致的组件大小、位置发生变化时的回调</span></span><br><span class="line"><span class="title function_">onAreaChange</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">oldValue</span>: <span class="title class_">Area</span>, <span class="attr">newValue</span>: <span class="title class_">Area</span></span>) =&gt;</span> <span class="built_in">void</span>): T</span><br></pre></td></tr></table></figure>
<h2 id="组件尺寸变化">组件尺寸变化</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//组件区域变化时触发该回调。仅会响应由布局变化所导致的组件尺寸发生变化时的回调</span></span><br><span class="line"><span class="title function_">onSizeChange</span>(<span class="attr">event</span>: <span class="title class_">SizeChangeCallback</span>): T</span><br><span class="line"><span class="comment">//组件区域变化时的回调类型</span></span><br><span class="line"><span class="title class_">SizeChangeCallback</span> = <span class="function">(<span class="params"><span class="attr">oldValue</span>: <span class="title class_">SizeOptions</span>, <span class="attr">newValue</span>: <span class="title class_">SizeOptions</span></span>) =&gt;</span> <span class="built_in">void</span></span><br></pre></td></tr></table></figure>
<h2 id="组件可见区域变化">组件可见区域变化</h2>
<ul>
<li>组件在屏幕中的显示区域面积变化时触发的事件</li>
<li>提供了判断组件是否完全或部分显示在屏幕中的能力，适用于广告曝光埋点之类的场景</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//组件可见区域变化时触发该回调</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="title function_">onVisibleAreaChange</span>(<span class="attr">ratios</span>: <span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt;, <span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">isVisible</span>: <span class="built_in">boolean</span>, <span class="attr">currentRatio</span>: <span class="built_in">number</span></span>) =&gt;</span> <span class="built_in">void</span>): T</span><br></pre></td></tr></table></figure>
<h2 id="组件快捷键">组件快捷键</h2>
<ul>
<li>设置组合键的同时可以设置自定义事件，组合键按下时，触发该自定义事件</li>
<li>若没有设置自定义事件，则组合键行为与click行为一致</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//设置组件的自定义组合键</span></span><br><span class="line"><span class="title function_">keyboardShortcut</span>(<span class="attr">value</span>: <span class="built_in">string</span> | <span class="title class_">FunctionKey</span>, <span class="attr">keys</span>: <span class="title class_">Array</span>&lt;<span class="title class_">ModifierKey</span>&gt;, action?: <span class="function">() =&gt;</span> <span class="built_in">void</span>): T</span><br></pre></td></tr></table></figure>
<p>系统已存在的按键事件</p>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>获焦组件</th>
<th>用途</th>
<th>事件处理类别</th>
</tr>
</thead>
</table>
<p>方向键、Shift + 方向键  | 输入框组件 | 移动光标  | 输入法<br>
方向键、Shift + 方向键 | 通用组件  | 系统处于走焦状态时，用于方向走焦 | 系统按键<br>
TAB、Shift + TAB  | 通用组件  | 触发进入走焦状态/走焦 | 系统按键</p>
<h2 id="自定义事件分发">自定义事件分发</h2>
<ul>
<li>ArkUI在处理触屏事件时，会在触屏事件触发前进行按压点和组件区域的触摸测试，来收集需要响应触屏事件的组件，再基于触摸测试结果分发相应的触屏事件</li>
<li>可以通过onChildTouchTest决定如何让子节点去做触摸测试，影响子组件的触摸测试，最终影响后续的触屏事件分发</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//当前组件可通过设置回调来自定义子节点如何去做触摸测试</span></span><br><span class="line"><span class="title function_">onChildTouchTest</span>(<span class="attr">event</span>: <span class="function">(<span class="params"><span class="attr">value</span>: <span class="title class_">Array</span>&lt;<span class="title class_">TouchTestInfo</span>&gt;</span>) =&gt;</span> <span class="title class_">TouchResult</span>): T</span><br></pre></td></tr></table></figure>
<h2 id="自定义事件拦截">自定义事件拦截</h2>
<ul>
<li>为组件提供自定义的事件拦截能力</li>
<li>可根据事件在控件上按下时发生的位置，输入源等事件信息决定控件上的HitTestMode属性</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">onTouchIntercept</span>(<span class="attr">callback</span>: <span class="title class_">Callback</span>&lt;<span class="title class_">TouchEvent</span>, <span class="title class_">HitTestMode</span>&gt;)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Harmony基本原理(3)——生命周期</title>
    <url>/posts/bfed/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>组件</h1>
<ul>
<li>组件是 OpenHarmony 页面最小显示单元</li>
<li>为了让系统知道这是一个组件，需要使用 @Component 修饰符和 struct 关键字修饰</li>
<li>自定义组件禁止添加构造函数</li>
<li>必须实现 build()方法，该方法满足 Builder 构造器接口定义，用于定义组件的声明式 UI 描述</li>
<li>在组件创建或者组件内 @State 修饰的变量更新时系统都会自动调用 build() 方法刷新UI</li>
</ul>
<h1>系统组件生命周期</h1>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">onAppear</span>()</span><br><span class="line"><span class="title function_">onDisAppear</span>()</span><br></pre></td></tr></table></figure>
<h1>自定义组件生命周期</h1>
<p>@Component 修饰的组件，ArkUI开发框架会自动为其赋予私有的生命周期方法 aboutToAppear() 和 aboutToDisappear() ，它们用于通知开发者该自定义组件的生命周的变更</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//函数在创建自定义组件的新实例后，在执行其 build() 函数之前执行</span></span><br><span class="line"><span class="comment">//允许在该函数中改变状态变量，更改将在后续执行 build() 函数中生效</span></span><br><span class="line"><span class="title function_">aboutToAppear</span>()</span><br><span class="line"><span class="comment">//函数在自定义组件析构消耗之前执行</span></span><br><span class="line"><span class="comment">//不允许在该函数中改变状态变量，特别是 @Link 变量的修改可能会导致应用程序行为不稳定</span></span><br><span class="line"><span class="title function_">aboutToDisappear</span>()</span><br></pre></td></tr></table></figure>
<p>自定义组件有如下特点：</p>
<ul>
<li>可组合：允许开发人员组合使用内置组件和其他组件，以及公共属性和方法。</li>
<li>可重用：可以被其他组件重用，并作为不同的实例在不同的父组件或容器中使用；</li>
<li>有生命周期：生命周期的回调方法可以在组件中配置，用于业务逻辑处理；</li>
<li>数据驱动更新：可以由状态数据驱动，实现UI自动更新。</li>
</ul>
<h1>页面的生命周期</h1>
<ul>
<li>页面本质上也是一个组件，只是页面对于组件来讲多了一个修饰符 @Entry(表示当前组件是一个页面，需要在config.json中做配置)</li>
<li>除了具有组件的生命周期外，它还有自己独有的生命周期方法</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//页面显示时触发一次，包括路由过程、应用进入前后台等场景</span></span><br><span class="line"><span class="comment">//仅 @Entry 修饰的自定义组件生效</span></span><br><span class="line"><span class="title function_">onPageShow</span>()</span><br><span class="line"><span class="comment">//页面消失时触发一次，包括路由过程、应用进入前后台等场景</span></span><br><span class="line"><span class="comment">//仅 @Entry 修饰的自定义组件生效</span></span><br><span class="line"><span class="title function_">onPageHide</span>()</span><br><span class="line"><span class="comment">//当用户点击返回按钮时触发</span></span><br><span class="line"><span class="comment">//仅 @Entry 修饰的自定义组件生效</span></span><br><span class="line"><span class="comment">//返回 true 表示页面自己处理返回逻辑, 不进行页面路由</span></span><br><span class="line"><span class="comment">//返回 false 表示使用默认的返回逻辑</span></span><br><span class="line"><span class="comment">//不返回值会作为 false 处理</span></span><br><span class="line"><span class="title function_">onBackPress</span>()</span><br></pre></td></tr></table></figure>
<h1>系统组件、自定义组件、页面的对比</h1>
<table>
<thead>
<tr>
<th>函数名</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>onAppear</td>
<td>系统组件独有的方法，组件从组件树上挂载的回调</td>
</tr>
<tr>
<td>onDisAppear</td>
<td>系统组件独有的方法，组件从组件树上卸载的回调</td>
</tr>
<tr>
<td>aboutToAppear</td>
<td>函数在创建自定义组件的新实例后，在执行其 build() 函数之前执行。允许在该函数中改变状态变量，更改将在后续执行 build() 函数中生效</td>
</tr>
<tr>
<td>aboutToDisappear</td>
<td>函数在自定义组件析构消耗之前执行。不允许在该函数中改变状态变量，特别是 @Link 变量的修改可能会导致应用程序行为不稳定</td>
</tr>
<tr>
<td>onPageShow</td>
<td>页面显示时触发该回调，包括路由过程、应用进入前后台等场景。仅 @Entry 修饰的自定义组件生效</td>
</tr>
<tr>
<td>onPageHide</td>
<td>页面消失时触发该回调，包括路由过程、应用进入前后台等场景。仅 @Entry 修饰的自定义组件生效</td>
</tr>
<tr>
<td>onBackPress</td>
<td>当用户点击返回按钮时触发，该方法返回 boolean 类型，true：表示页面自己处理返回逻辑, 不进行页面路由。false：表示使用默认的返回逻辑。不返回值会作为 false 处理。仅 @Entry 修饰的自定义组件生效</td>
</tr>
</tbody>
</table>
<ul>
<li>上面的回调函数是私有的，在运行时由开发框架在特定的时间进行调用，不能从应用程序中手动调用这些回调函数</li>
<li>允许在生命周期函数中使用 Promise 和异步回调函数，比如网络资源获取，定时器设置等</li>
<li>不允许在生命周期函数中使用 async await</li>
</ul>
<h1>具体页面构建过程</h1>
<h2 id="页面首次生成">页面首次生成</h2>
<ol>
<li>index.ets源码编译为目标文件(含创建UI的指令流)</li>
<li>生成Component树(C++层面的UI描述层)</li>
<li>进一步根据Component树生成Element树(Element是Component实例)</li>
<li>为每个Element创建对应RenderNode</li>
<li>渲染并绘制界面</li>
</ol>
<ul>
<li>Element表示具体组件结点，形成Element树维持界面运行时的树形结构，更新局部变化</li>
<li>RenderNode负责每个结点显示，形成Render树维持渲染界面需要的信息</li>
</ul>
<h2 id="数据更新后的页面渲染过程">数据更新后的页面渲染过程</h2>
<ol>
<li>@State修饰的变量发生变更，触发对应的getter/setter方法</li>
<li>状态管理模块定位对应的UI组件</li>
<li>状态管理模块更新对应的Element树</li>
<li>状态管理模块更新对应的RenderNode</li>
<li>渲染并绘制界面</li>
</ol>
]]></content>
      <tags>
        <tag>鸿蒙基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony编年史</title>
    <url>/posts/88b0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony路由</title>
    <url>/posts/420d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>Harmony路由原理</h1>
<p>一个Ability里面的多个page可通过router进行切换。</p>
<h2 id="页面内">页面内</h2>
<p>页面内跳转是指所跳转的页面在同一个Ability内部，它们之间的跳转可以使用Router或者Navigator的方式</p>
<h2 id="页面间">页面间</h2>
<p>页面间跳转是指所跳转的页面属与不同的Ability，这种跳转需要借助featureAbility(featureAbility模块的startAbility()方法)实现<br>
featureAbility有如下方法：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">namespace</span> <span class="title class_">featureAbility</span> &#123;</span><br><span class="line">  <span class="comment">/**省略部分方法*/</span></span><br><span class="line">  <span class="comment">//打开指定 Ability 。默认第一个</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">startAbility</span>(<span class="params"><span class="attr">parameter</span>: <span class="title class_">StartAbilityParameter</span>, <span class="attr">callback</span>: <span class="title class_">AsyncCallback</span>&lt;<span class="built_in">number</span>&gt;</span>): <span class="built_in">void</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">startAbility</span>(<span class="params"><span class="attr">parameter</span>: <span class="title class_">StartAbilityParameter</span></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">number</span>&gt;;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">startAbilityForResult</span>(<span class="params"><span class="attr">parameter</span>: <span class="title class_">StartAbilityParameter</span>, <span class="attr">callback</span>: <span class="title class_">AsyncCallback</span>&lt;<span class="title class_">AbilityResult</span>&gt;</span>): <span class="built_in">void</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">startAbilityForResult</span>(<span class="params"><span class="attr">parameter</span>: <span class="title class_">StartAbilityParameter</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">AbilityResult</span>&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>featureAbility使用方式：</p>
<ol>
<li>创建targetAbility</li>
<li>在pages/index.ets中引入featureAbility(import featureAbility from ‘@ohos.ability.featureAbility’)</li>
<li>通过featureAbility.startAbility()打开目标ability</li>
</ol>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//pages/index.ets中在触发事件中使用</span></span><br><span class="line">featureAbility.<span class="title function_">startAbility</span>(&#123;</span><br><span class="line">            <span class="attr">want</span>: &#123;</span><br><span class="line">                <span class="comment">// 目标Ability所在的bundleName，也就是config.json里配置的bundleName</span></span><br><span class="line">                <span class="attr">bundleName</span>: <span class="string">&quot;com.example.myapplication&quot;</span>,</span><br><span class="line">                <span class="comment">// 目标Ability的全路径</span></span><br><span class="line">                <span class="attr">abilityName</span>: <span class="string">&quot;com.example.myapplication.targetAbility&quot;</span></span><br><span class="line">                <span class="comment">// 添加uri参数，指定打开创建targetAbility下的second页面。</span></span><br><span class="line">                <span class="attr">uri</span>: <span class="string">&quot;pages/second&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;Operation successful. Data: &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data))</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Operation failed. Cause: &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(error));</span><br><span class="line">          &#125;)</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>修改SettingAbility的默认首页面</li>
<li></li>
</ol>
<h1>页面内路由实现方式</h1>
<h2 id="Navigation组件">Navigation组件</h2>
<ul>
<li>Navigator本质上是对 Router 的封装</li>
<li>只能包含一个子组件</li>
<li>页面布局的根容器，用于设置页面标题栏、工具栏以及菜单栏</li>
<li>提供了 CustomBuilder 模式来自定义展示样式<br>
Navigation有如下属性：</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> <span class="keyword">class</span> <span class="title class_">NavigationAttribute</span> <span class="keyword">extends</span> <span class="title class_ inherited__">CommonMethod</span>&lt;<span class="title class_">NavigationAttribute</span>&gt; &#123;</span><br><span class="line">    <span class="comment">//menus、toolBar</span></span><br><span class="line">    <span class="title function_">menus</span>(<span class="attr">value</span>: <span class="title class_">Array</span>&lt;<span class="title class_">NavigationMenuItem</span>&gt; | <span class="title class_">CustomBuilder</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">    <span class="title function_">toolBar</span>(<span class="attr">value</span>: <span class="built_in">object</span> | <span class="title class_">CustomBuilder</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">    <span class="title function_">title</span>(<span class="attr">value</span>: <span class="built_in">string</span> | <span class="title class_">CustomBuilder</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">    <span class="title function_">subTitle</span>(<span class="attr">value</span>: <span class="built_in">string</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">    <span class="title function_">hideTitleBar</span>(<span class="attr">value</span>: <span class="built_in">boolean</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">    <span class="title function_">hideBackButton</span>(<span class="attr">value</span>: <span class="built_in">boolean</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">    <span class="title function_">titleMode</span>(<span class="attr">value</span>: <span class="title class_">NavigationTitleMode</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">    <span class="title function_">hideToolBar</span>(<span class="attr">value</span>: <span class="built_in">boolean</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">    <span class="title function_">onTitleModeChange</span>(<span class="attr">callback</span>: <span class="function">(<span class="params"><span class="attr">titleMode</span>: <span class="title class_">NavigationTitleMode</span></span>) =&gt;</span> <span class="built_in">void</span>): <span class="title class_">NavigationAttribute</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="router（现已不推荐）">router（现已不推荐）</h2>
<p>路由配置</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法1</span></span><br><span class="line"><span class="comment">//pushUrl(options: RouterOptions, callback: AsyncCallback&lt;void&gt;): void</span></span><br><span class="line"><span class="keyword">import</span> &#123; router &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.ArkUI&#x27;</span>;</span><br><span class="line">router.<span class="title function_">pushUrl</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&quot;pages/PostPage&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line"><span class="comment">//pushNamedRoute</span></span><br><span class="line"><span class="keyword">import</span> &#123; router &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.ArkUI&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法3</span></span><br><span class="line"><span class="comment">//最后在事件中调用routePage()函数即可</span></span><br><span class="line"><span class="keyword">import</span> &#123; router &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.ArkUI&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BusinessError</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.BasicServicesKit&#x27;</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">routePage</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">options</span>:router.<span class="property">RouterOptions</span> = &#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;pages/PostPage&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 建议使用this.getUIContext().getRouter().pushUrl()</span></span><br><span class="line">        <span class="keyword">await</span> router.<span class="title function_">pushUrl</span>(options)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;kkk&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">` fail callback, code: <span class="subst">$&#123;(err <span class="keyword">as</span> BusinessError).code&#125;</span>, msg: <span class="subst">$&#123;(err <span class="keyword">as</span> BusinessError).message&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//resouces/base/profile/main_pages.json中添加路径</span></span><br><span class="line"><span class="comment">//需从同pages层级的文件夹下开始索引</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;src&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;pages/Index&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pages/PostPage&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Components/Notification&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>相关函数</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取发起跳转的页面往当前页传入的参数</span></span><br><span class="line">router.<span class="title function_">getParams</span>(): <span class="title class_">Object</span></span><br><span class="line"><span class="comment">//获取当前在页面栈内的页面数量</span></span><br><span class="line">router.<span class="title function_">getLength</span>(): <span class="built_in">string</span></span><br><span class="line"><span class="comment">//获取栈顶的状态信息</span></span><br><span class="line">router.<span class="title function_">getState</span>(): <span class="title class_">RouterState</span></span><br><span class="line"><span class="comment">//通过索引值获取对应页面的状态信息</span></span><br><span class="line">router.<span class="title function_">getStateByIndex</span>(<span class="attr">index</span>: <span class="built_in">number</span>): <span class="title class_">RouterState</span> | <span class="literal">undefined</span></span><br><span class="line"><span class="comment">//清空页面栈中的所有历史页面，仅保留当前页面作为栈顶页面</span></span><br><span class="line">router.<span class="title function_">clear</span>(): <span class="built_in">void</span></span><br><span class="line"><span class="comment">//返回指定的页面，会删除当前页面与指定页面之间的所有页面</span></span><br><span class="line">router.<span class="title function_">back</span>(<span class="attr">index</span>: <span class="built_in">number</span>, params?: <span class="title class_">Object</span>): <span class="built_in">void</span></span><br><span class="line"><span class="comment">//跳转到指定的命名路由页面</span></span><br><span class="line">router.<span class="title function_">pushNamedRoute</span>(<span class="attr">options</span>: <span class="title class_">NamedRouterOptions</span>, <span class="attr">mode</span>: <span class="title class_">RouterMode</span>, <span class="attr">callback</span>: <span class="title class_">AsyncCallback</span>&lt;<span class="built_in">void</span>&gt;): <span class="built_in">void</span></span><br><span class="line"><span class="comment">//用指定的命名路由页面替换当前页面，并销毁被替换的页面</span></span><br><span class="line">router.<span class="title function_">replaceNamedRoute</span>(<span class="attr">options</span>: <span class="title class_">NamedRouterOptions</span>, <span class="attr">mode</span>: <span class="title class_">RouterMode</span>, <span class="attr">callback</span>: <span class="title class_">AsyncCallback</span>&lt;<span class="built_in">void</span>&gt;): <span class="built_in">void</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony小技巧(2)——组件</title>
    <url>/posts/60c4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>使用开源组件</h1>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//安装</span></span><br><span class="line">ohpm install lite_chart</span><br><span class="line"><span class="comment">//引用</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LiteChart</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;lite_chart&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1>组件</h1>
<h2 id="aspectRatio-m-n">aspectRatio(m/n)</h2>
<p>m/n为宽高比</p>
<h2 id="布局调整">布局调整</h2>
<h3 id="layoutWeight-n">layoutWeight(n)</h3>
<p>n为占据的份额。可用于底部，这样底部上方的内容不会把底部挤掉</p>
<h3 id="margin">.margin({})</h3>
<h3 id="padding">.padding({})</h3>
<h2 id="stateStyles">stateStyles</h2>
<p>里面只能使用通用属性</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">.<span class="title function_">stateStyles</span>(&#123;</span><br><span class="line">	<span class="attr">normal</span>:&#123;</span><br><span class="line">		.<span class="title function_">width</span>(<span class="number">130</span>)</span><br><span class="line">		.<span class="title function_">height</span>(<span class="number">130</span>)</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">pressed</span>:&#123;</span><br><span class="line">		.<span class="title function_">width</span>((<span class="number">180</span>))</span><br><span class="line">		.<span class="title function_">height</span>(<span class="number">180</span>)</span><br><span class="line">	&#125;,</span><br><span class="line">	 <span class="attr">disabled</span>:&#123;</span><br><span class="line">		.<span class="title function_">backgroundColor</span>(<span class="title class_">Color</span>.<span class="property">Green</span>)</span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">selected</span>:&#123;</span><br><span class="line">		.<span class="title function_">width</span>(<span class="number">280</span>)</span><br><span class="line">		.<span class="title function_">height</span>(<span class="number">280</span>)</span><br><span class="line">	&#125;,</span><br><span class="line">	focused    :&#123;</span><br><span class="line">		.<span class="title function_">width</span>(<span class="number">280</span>)</span><br><span class="line">		.<span class="title function_">height</span>(<span class="number">280</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="zIndex-n">.zIndex(n)</h2>
<p>在父容器中的层级，n越高层级越高</p>
]]></content>
  </entry>
  <entry>
    <title>Harmony小技巧(3)——快捷键</title>
    <url>/posts/ae08/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><table>
<thead>
<tr>
<th>快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>Alt+Shift+Enter</td>
<td>快速导入包</td>
</tr>
<tr>
<td>Ctrl+/</td>
<td>注释</td>
</tr>
<tr>
<td>Shift+Tab</td>
<td>取消缩进</td>
</tr>
<tr>
<td>Ctrl+Alt+L</td>
<td>代码格式化</td>
</tr>
</tbody>
</table>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>文学批评理论(2)——结构主义</title>
    <url>/posts/c1c6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>历史</h1>
<h1></h1>
<h1></h1>
]]></content>
      <tags>
        <tag>文学批评</tag>
      </tags>
  </entry>
  <entry>
    <title>文学批评概论</title>
    <url>/posts/4ca/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>文学批评</tag>
      </tags>
  </entry>
  <entry>
    <title>文学批评理论(1)——自由人文主义</title>
    <url>/posts/ce1e/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>历史</h1>
<p>莫里斯(F.D. Maurice)<br>
马修·阿诺德(Matthew Arnold)<br>
理查兹(Ivor Armstrong Richards)<br>
燕卜荪(William Empson)<br>
艾略特(T.S. Eliot)<br>
利维斯()</p>
<h1>自由人文主义准则</h1>
<ol>
<li>看待文学的态度。优秀的文学超越时间、历史局限性，与永恒人性对话</li>
<li>文本包含自身的意义</li>
</ol>
<h1></h1>
]]></content>
      <tags>
        <tag>文学批评</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown示例</title>
    <url>/posts/ed04/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><!-- 标题 -->
<h1>标题</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 标题1</span></span><br><span class="line"><span class="section">## 标题2</span></span><br></pre></td></tr></table></figure>
<h1>粗体与斜体</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">### 斜体</span></span><br><span class="line">Italicized text is the <span class="emphasis">*cat&#x27;s meow*</span> # 斜体</span><br><span class="line">A<span class="emphasis">*cat*</span>meow # 斜体（突出中间部分）</span><br><span class="line"><span class="section">### 粗体</span></span><br><span class="line"><span class="strong">**bold text**</span></span><br><span class="line"><span class="strong">__bold text__</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<h3 id="斜体">斜体</h3>
<p>Italicized text is the <em>cat’s meow</em> # 斜体<br>
A<em>cat</em>meow # 斜体（突出中间部分）</p>
<h3 id="粗体">粗体</h3>
<p><strong>bold text</strong><br>
<strong>bold text</strong></p>
<h1>代码块</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 上面三个\`，下面三个\`</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1>引用</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 嵌套引用</span></span><br><span class="line"><span class="quote">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span></span><br><span class="line"><span class="section">## 带其他元素的引用</span></span><br><span class="line"><span class="quote">&gt; #### The quarterly results look great!</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt; - Revenue was off the chart.</span></span><br><span class="line"><span class="quote">&gt; - Profits were higher than ever.</span></span><br><span class="line"><span class="quote">&gt;</span></span><br><span class="line"><span class="quote">&gt;  <span class="emphasis">*Everything*</span> is going according to <span class="strong">**plan**</span>.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<h2 id="嵌套引用">嵌套引用</h2>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her castle.</p>
<blockquote>
<p>The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</p>
</blockquote>
</blockquote>
<h2 id="带其他元素的引用">带其他元素的引用</h2>
<blockquote>
<h4 id="The-quarterly-results-look-great">The quarterly results look great!</h4>
<ul>
<li>Revenue was off the chart.</li>
<li>Profits were higher than ever.</li>
</ul>
<p><em>Everything</em> is going according to <strong>plan</strong>.</p>
</blockquote>
<h1>列表</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">## 有序列表</span></span><br><span class="line"><span class="bullet">1.</span> First item</span><br><span class="line"><span class="bullet">2.</span> Second item</span><br><span class="line"><span class="bullet">3.</span> Third item</span><br><span class="line"><span class="bullet">4.</span> Fourth item</span><br><span class="line"><span class="section">## 无序列表</span></span><br><span class="line"><span class="bullet">-</span> First item</span><br><span class="line"><span class="bullet">+</span> Second item</span><br><span class="line"><span class="bullet">-</span> Third item</span><br><span class="line"><span class="bullet">    -</span> Indented item</span><br><span class="line"><span class="bullet">    -</span> Indented item</span><br><span class="line"><span class="bullet">*</span> Fourth item</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<h2 id="有序列表">有序列表</h2>
<ol>
<li>First item</li>
<li>Second item</li>
<li>Third item</li>
<li>Fourth item</li>
</ol>
<h2 id="无序列表">无序列表</h2>
<ul>
<li>First item</li>
</ul>
<ul>
<li>Second item</li>
</ul>
<ul>
<li>Third item
<ul>
<li>Indented item</li>
<li>Indented item</li>
</ul>
</li>
</ul>
<ul>
<li>Fourth item</li>
</ul>
<h1>分割线</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">***</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">---</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">________________<span class="emphasis">_</span></span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<hr>
<hr>
<hr>
<h1>链接</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个链接 [<span class="string">Markdown语法</span>](<span class="link">https://markdown.com.cn &quot;标题&quot;</span>)。</span><br><span class="line"><span class="language-xml">&lt;https://markdown.com.cn&gt;</span></span><br><span class="line"><span class="section">## 格式化</span></span><br><span class="line">I love supporting the <span class="strong">**[<span class="string">EFF</span>](<span class="link">https://eff.org</span>)**</span>.</span><br><span class="line">This is the <span class="emphasis">*[<span class="string">Markdown Guide</span>](<span class="link">https://www.markdownguide.org</span>)*</span>.</span><br><span class="line">See the section on [<span class="string">`code`</span>](<span class="link">#code</span>).</span><br></pre></td></tr></table></figure>
<p>效果如下：<br>
这是一个链接 <a href="https://markdown.com.cn" title="标题">Markdown语法</a>。<br>
<a href="https://markdown.com.cn">https://markdown.com.cn</a></p>
<h2 id="格式化">格式化</h2>
<p>I love supporting the <strong><a href="https://eff.org">EFF</a></strong>.<br>
This is the <em><a href="https://www.markdownguide.org">Markdown Guide</a></em>.<br>
See the section on <a href="#code"><code>code</code></a>.</p>
<h1>图片</h1>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">这是图片</span>](<span class="link">/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;</span>)</span><br><span class="line"><span class="section">## 链接图片</span></span><br><span class="line">[<span class="string">![沙漠中的岩石图片</span>](<span class="link">/assets/img/shiprock.jpg &quot;Shiprock&quot;</span>)](<span class="link">https://markdown.com.cn</span>) </span><br></pre></td></tr></table></figure>
<p>效果如下：<br>
<img src="/assets/img/philly-magic-garden.jpg" alt="这是图片" title="Magic Gardens"></p>
<h2 id="链接图片">链接图片</h2>
<p><a href="https://markdown.com.cn"><img src="/assets/img/shiprock.jpg" alt="沙漠中的岩石图片" title="Shiprock"></a></p>
<h1>流程图</h1>
<p>详见<img src="https://mermaid.js.org/syntax/flowchart.html" alt="https://mermaid.js.org/syntax/flowchart.html"><br>
最小示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># options contains:</span></span><br><span class="line"><span class="section"># TB - Top to bottom</span></span><br><span class="line"><span class="section"># TD - Top-down/ same as top to bottom</span></span><br><span class="line"><span class="section"># BT - Bottom to top</span></span><br><span class="line"><span class="section"># RL - Right to left</span></span><br><span class="line"><span class="section"># LR - Left to right</span></span><br><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">flowchart [options]</span><br><span class="line"><span class="code">    A[Start] --&gt; B&#123;Is it?&#125;</span></span><br><span class="line"><span class="code">    B -- Yes --&gt; C[OK]</span></span><br><span class="line"><span class="code">    C --&gt; D[Rethink]</span></span><br><span class="line"><span class="code">    D --&gt; B</span></span><br><span class="line"><span class="code">    B -- No ----&gt; E[End]</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure>
<!-- # 参考文献
需"npm install hexo-reference --save"安装插件。
```Markdown
### 引用文献的语句
<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[]()
``` -->">[1]</span></a></sup>
<h3 id="引用参考文献：">引用参考文献：</h3>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href=""></a>
``` --&gt;<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>博客所用插件记录</title>
    <url>/posts/1495/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony网络相关</title>
    <url>/posts/cf3a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>Get方式</h1>
<h2 id="根据JSON内容设置接口">根据JSON内容设置接口</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//如果是数组，则用data:Data[] = []</span></span><br><span class="line"><span class="comment">//如果是具体类型，则用dataModule:DataModule = new DataModule</span></span><br><span class="line"><span class="title class_">Interface</span> <span class="title class_">Data</span>&#123;</span><br><span class="line">    <span class="attr">data1</span>:<span class="title class_">CommonType</span></span><br><span class="line">    <span class="attr">data2</span>:sonType</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DataModule</span> <span class="keyword">implements</span> <span class="title class_">Data</span>&#123;</span><br><span class="line">    <span class="attr">data1</span>:<span class="title class_">CommonType</span></span><br><span class="line">    <span class="attr">data2</span>:specialType</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="attr">info</span>:<span class="title class_">Data</span></span>)&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data1</span> = info.<span class="property">data1</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data2</span> = info.<span class="property">data2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">specialType</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="meta">@State</span> <span class="attr">dataList</span>:<span class="title class_">DataModule</span>[] = [</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">DataModule</span>(&#123;<span class="attr">data1</span>:xx,<span class="attr">data2</span>:yy&#125;),</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">DataModule</span>(&#123;<span class="attr">data1</span>:xx,<span class="attr">data2</span>:yy&#125;),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="获取">获取</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; http &#125; <span class="keyword">from</span> <span class="string">&#x27;@kit.NetworkKit&#x27;</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line"><span class="comment">//创建http</span></span><br><span class="line"><span class="keyword">let</span> httpRequest = http.<span class="title function_">createHttp</span>()</span><br><span class="line"><span class="comment">//请求</span></span><br><span class="line"><span class="comment">//含method,header</span></span><br><span class="line">httpRequest.<span class="title function_">request</span>(url,&#123;</span><br><span class="line">  <span class="attr">method</span>:http.<span class="property">RequestMethod</span>.<span class="property">GET</span>,</span><br><span class="line">  <span class="attr">header</span>:&#123;</span><br><span class="line">    <span class="attr">cookie</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">agent</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">info</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">result</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(info.<span class="property">result</span>.<span class="title function_">toString</span>())</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//Json.stringify()</span></span><br></pre></td></tr></table></figure>
<h2 id="使用">使用</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">xxx</span>?.<span class="property">yyy</span></span><br></pre></td></tr></table></figure>
<h2 id="申请网络权限">申请网络权限</h2>
<p>src/main/resources/module.json5中的module添加&quot;requestPermissions&quot;: [{“name”: “ohos.permission.INTERNET”<br>
}],</p>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony通用信息(1)——通用属性</title>
    <url>/posts/bbc6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>通用属性</h1>
<h2 id="尺寸">尺寸</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//缺省时使用元素自身内容需要的宽/高</span></span><br><span class="line"><span class="comment">//若子组件的宽/高大于父组件的宽/高，则会画出父组件的范围</span></span><br><span class="line"><span class="comment">//从API version 10开始，该接口支持calc计算特性</span></span><br><span class="line"><span class="title function_">width</span>(<span class="attr">value</span>: <span class="title class_">Length</span>)</span><br><span class="line"><span class="title function_">height</span>(<span class="attr">value</span>: <span class="title class_">Length</span>)</span><br><span class="line"><span class="comment">//从API version 10开始，该接口支持calc计算特性</span></span><br><span class="line"><span class="title function_">size</span>(<span class="attr">value</span>: <span class="title class_">SizeOptions</span>)</span><br><span class="line"><span class="comment">//从API version 10开始，该接口支持calc计算特性</span></span><br><span class="line"><span class="title function_">padding</span>(<span class="attr">value</span>: <span class="title class_">Padding</span> | <span class="title class_">Length</span> | <span class="title class_">LocalizedPadding</span>)</span><br><span class="line"><span class="title function_">margin</span>(<span class="attr">value</span>: <span class="title class_">Margin</span> | <span class="title class_">Length</span> | <span class="title class_">LocalizedMargin</span>)</span><br><span class="line"><span class="comment">//对子组件进行重新布局</span></span><br><span class="line"><span class="comment">//子元素与兄弟元素占主轴尺寸按照权重进行分配</span></span><br><span class="line"><span class="comment">//忽略元素本身尺寸设置</span></span><br><span class="line"><span class="comment">//表示自适应占满剩余空间</span></span><br><span class="line"><span class="title function_">layoutWeight</span>(<span class="attr">value</span>: <span class="built_in">number</span> | <span class="built_in">string</span>)</span><br><span class="line"><span class="comment">//设置约束尺寸，组件布局时，进行尺寸范围限制</span></span><br><span class="line"><span class="comment">//优先级高于Width和Height</span></span><br><span class="line"><span class="title function_">constraintSize</span>(<span class="attr">value</span>: <span class="title class_">ConstraintSizeOptions</span>)</span><br><span class="line"><span class="title function_">constraintSize</span>(minWidth/maxWidth/minHeight/maxHeight)</span><br></pre></td></tr></table></figure>
<h2 id="位置">位置</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 布局约束</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="Flex布局">Flex布局</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 边框</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="图片边框">图片边框</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 背景</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br><span class="line"><span class="title function_">background</span>(<span class="attr">builder</span>: <span class="title class_">CustomBuilder</span>, options?: &#123; align?: <span class="title class_">Alignment</span> &#125;)</span><br><span class="line"><span class="title function_">backgroundColor</span>(<span class="attr">value</span>: <span class="title class_">ResourceColor</span>)</span><br><span class="line"><span class="title function_">backgroundImage</span>(<span class="attr">src</span>: <span class="title class_">ResourceStr</span> | <span class="title class_">PixelMap</span>, repeat?: <span class="title class_">ImageRepeat</span>)</span><br><span class="line"><span class="title function_">backgroundImageSize</span>(<span class="attr">value</span>: <span class="title class_">SizeOptions</span> | <span class="title class_">ImageSize</span>)</span><br><span class="line"><span class="title function_">backgroundImagePosition</span>(<span class="attr">value</span>: <span class="title class_">Position</span> | <span class="title class_">Alignment</span>)</span><br></pre></td></tr></table></figure>
<h2 id="透明度">透明度</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">opacity</span>(<span class="attr">value</span>: <span class="built_in">number</span> | <span class="title class_">Resource</span>)</span><br></pre></td></tr></table></figure>
<h2 id="显隐控制">显隐控制</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">visibility</span>(<span class="attr">value</span>: <span class="title class_">Visibility</span>)</span><br></pre></td></tr></table></figure>
<h2 id="禁用控制">禁用控制</h2>
<p>设置组件是否可交互</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">enabled</span>(<span class="attr">value</span>: <span class="built_in">boolean</span>)</span><br></pre></td></tr></table></figure>
<h2 id="浮层">浮层</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在当前组件上，增加遮罩文本或者叠加自定义组件以及ComponentContent作为该组件的浮层</span></span><br><span class="line"><span class="title function_">overlay</span>(<span class="attr">value</span>: <span class="built_in">string</span> | <span class="title class_">CustomBuilder</span> | <span class="title class_">ComponentContent</span>, options?: <span class="title class_">OverlayOptions</span> )</span><br></pre></td></tr></table></figure>
<h2 id="Z序">Z序</h2>
<p>设置组件的堆叠顺序</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">zIndex</span>(<span class="attr">value</span>: <span class="built_in">number</span>)</span><br></pre></td></tr></table></figure>
<h2 id="图形变换">图形变换</h2>
<p>对组件进行旋转、平移、缩放、矩阵变换等操作</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">rotate</span>(<span class="attr">value</span>: <span class="title class_">RotateOptions</span>)</span><br><span class="line"><span class="comment">//平移</span></span><br><span class="line"><span class="title function_">translate</span>(<span class="attr">value</span>: <span class="title class_">TranslateOptions</span>)</span><br><span class="line"><span class="comment">//缩放</span></span><br><span class="line"><span class="title function_">scale</span>(<span class="attr">value</span>: <span class="title class_">ScaleOptions</span>)</span><br><span class="line"><span class="comment">//变换矩阵</span></span><br><span class="line"><span class="title function_">transform</span>(<span class="attr">value</span>: <span class="built_in">object</span>)</span><br></pre></td></tr></table></figure>
<h2 id="图像效果">图像效果</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//模糊</span></span><br><span class="line"><span class="title function_">blur</span>(<span class="attr">value</span>: <span class="built_in">number</span>, options?: <span class="title class_">BlurOptions</span>)</span><br><span class="line"><span class="title function_">shadow</span>(<span class="attr">value</span>: <span class="title class_">ShadowOptions</span> | <span class="title class_">ShadowStyle</span>)</span><br><span class="line"><span class="comment">//灰度</span></span><br><span class="line"><span class="title function_">grayscale</span>(<span class="attr">value</span>: <span class="built_in">number</span>)</span><br><span class="line"><span class="comment">//高光</span></span><br><span class="line"><span class="title function_">brightness</span>(<span class="attr">value</span>: <span class="built_in">number</span>)</span><br><span class="line"><span class="comment">//饱和度</span></span><br><span class="line"><span class="title function_">saturate</span>(<span class="attr">value</span>: <span class="built_in">number</span>)</span><br><span class="line"><span class="comment">//对比度</span></span><br><span class="line"><span class="title function_">contrast</span>(<span class="attr">value</span>: <span class="built_in">number</span>)</span><br><span class="line"><span class="comment">//反转</span></span><br><span class="line"><span class="title function_">invert</span>(<span class="attr">value</span>: <span class="built_in">number</span> | <span class="title class_">InvertOptions</span>)</span><br><span class="line"><span class="comment">//转为深褐色</span></span><br><span class="line"><span class="title function_">sepia</span>(<span class="attr">value</span>: <span class="built_in">number</span>)</span><br><span class="line"><span class="comment">//色相旋转</span></span><br><span class="line"><span class="title function_">hueRotate</span>(<span class="attr">value</span>: <span class="built_in">number</span> | <span class="built_in">string</span>)</span><br><span class="line"><span class="comment">//颜色添加</span></span><br><span class="line"><span class="title function_">colorBlend</span>(<span class="attr">value</span>: <span class="title class_">Color</span> | <span class="built_in">string</span> | <span class="title class_">Resource</span>)</span><br><span class="line"><span class="title function_">linearGradientBlur</span>(<span class="attr">value</span>: <span class="built_in">number</span>, <span class="attr">options</span>: <span class="title class_">LinearGradientBlurOptions</span>)</span><br><span class="line"><span class="comment">//设置当前控件和子控件是否先整体离屏渲染绘制后再与父控件融合绘制</span></span><br><span class="line"><span class="title function_">renderGroup</span>(<span class="attr">value</span>: <span class="built_in">boolean</span>)</span><br><span class="line"><span class="comment">//将当前控件的内容（包含子节点内容）与下方画布（可能为离屏画布）已有内容进行混合</span></span><br><span class="line"><span class="title function_">blendMode</span>(<span class="attr">value</span>: <span class="title class_">BlendMode</span>, <span class="keyword">type</span>?: <span class="title class_">BlendApplyType</span>)</span><br></pre></td></tr></table></figure>
<h2 id="形状裁剪">形状裁剪</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 栅格</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="颜色渐变">颜色渐变</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">linearGradient</span>(<span class="attr">value</span>: &#123;angle?: <span class="built_in">number</span> | <span class="built_in">string</span>; direction?: <span class="title class_">GradientDirection</span>; <span class="attr">colors</span>: <span class="title class_">Array</span>&lt;[<span class="title class_">ResourceColor</span>, <span class="built_in">number</span>]&gt;; repeating?: <span class="built_in">boolean</span>;&#125;)</span><br><span class="line"><span class="comment">//角度渐变</span></span><br><span class="line"><span class="title function_">sweepGradient</span>(<span class="attr">value</span>: &#123;<span class="attr">center</span>: [<span class="title class_">Length</span>, <span class="title class_">Length</span>]; start?: <span class="built_in">number</span> | <span class="built_in">string</span>; end?: <span class="built_in">number</span> | <span class="built_in">string</span>; rotation?: <span class="built_in">number</span> | <span class="built_in">string</span>; <span class="attr">colors</span>: <span class="title class_">Array</span>&lt;[<span class="title class_">ResourceColor</span>, <span class="built_in">number</span>]&gt;; repeating?: <span class="built_in">boolean</span>;&#125;)</span><br><span class="line"><span class="comment">//径向渐变</span></span><br><span class="line"><span class="title function_">radialGradient</span>(<span class="attr">value</span>: &#123; <span class="attr">center</span>: [<span class="title class_">Length</span>, <span class="title class_">Length</span>]; <span class="attr">radius</span>: <span class="built_in">number</span> | <span class="built_in">string</span>; <span class="attr">colors</span>: <span class="title class_">Array</span>&lt;[<span class="title class_">ResourceColor</span>, <span class="built_in">number</span>]&gt;; repeating?: <span class="built_in">boolean</span> &#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Popup">Popup</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">bindPopup</span>(<span class="attr">show</span>: <span class="built_in">boolean</span>, <span class="attr">popup</span>: <span class="title class_">PopupOptions</span> | <span class="title class_">CustomPopupOptions</span>)</span><br></pre></td></tr></table></figure>
<h2 id="菜单">菜单</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 焦点</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="悬浮态">悬浮态</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 组件标识</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="复用标识">复用标识</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 多态样式</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="分布式迁移标识">分布式迁移标识</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 前景色</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="前景属性">前景属性</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 组件内容模糊</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="运动模糊">运动模糊</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 点击回弹</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="无障碍">无障碍</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 动态属性</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="动态手势">动态手势</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 外描边</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="视效">视效</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 自定义绘制</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="自定义内容">自定义内容</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 自定义属性</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="触摸交互">触摸交互</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 模态转场</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="隐私遮罩">隐私遮罩</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 文本通用</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br><span class="line"><span class="title function_">fontColor</span>(<span class="attr">value</span>: <span class="title class_">ResourceColor</span>)</span><br><span class="line"><span class="title function_">fontSize</span>(<span class="attr">value</span>: <span class="built_in">number</span> | <span class="built_in">string</span> | <span class="title class_">Resource</span>)</span><br><span class="line"><span class="title function_">fontStyle</span>(<span class="attr">value</span>: <span class="title class_">FontStyle</span>)</span><br><span class="line"><span class="title function_">fontWeight</span>(<span class="attr">value</span>: <span class="built_in">number</span> | <span class="title class_">FontWeight</span> | <span class="built_in">string</span>)</span><br><span class="line"><span class="title function_">fontFamily</span>(<span class="attr">value</span>: <span class="built_in">string</span> | <span class="title class_">Resource</span>)</span><br><span class="line"><span class="comment">//设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小</span></span><br><span class="line"><span class="title function_">lineHeight</span>(<span class="attr">value</span>: <span class="built_in">number</span> | <span class="built_in">string</span> | <span class="title class_">Resource</span>)</span><br><span class="line"><span class="comment">//设置文本装饰线样式及其颜色</span></span><br><span class="line"><span class="title function_">decoration</span>(<span class="attr">value</span>: <span class="title class_">DecorationStyleInterface</span>)</span><br></pre></td></tr></table></figure>
<h2 id="拖拽">拖拽</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 安全区域</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="组件内容填充">组件内容填充</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 事件独占</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
<h2 id="鼠标光标">鼠标光标</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">## 特效绘制合并</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">Ts</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony状态管理</title>
    <url>/posts/8fb2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>实时渲染必备条件</h1>
<ol>
<li>有状态修饰器</li>
<li>第一层级数据改变<br>
但@Builder原则上只展示界面，不涉及状态相关，不改变数据</li>
</ol>
<h1>相关组件</h1>
<h2 id="Stata">@Stata</h2>
<p>驱动界面刷新</p>
<h2 id="Prop">@Prop</h2>
<ul>
<li>单向传值，父传子，只传一次</li>
<li>深拷贝，父与子各有一份完全独立的数据(独立内存区域)</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@State</span> <span class="attr">val</span>:<span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Son</span>(&#123;<span class="attr">val</span>:val&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@Prop</span> val</span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Link">@Link</h2>
<ul>
<li>双向传值</li>
<li>浅拷贝，父与子共用一份数据</li>
</ul>
<h3 id="示例">示例</h3>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@State</span> <span class="attr">val</span>:<span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Son</span>(&#123;<span class="attr">val</span>:val&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@Link</span> <span class="attr">val</span>:<span class="built_in">number</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Provide和-Consume">@Provide和@Consume</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="meta">@eEntry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@Provide</span> <span class="attr">val</span>:<span class="built_in">number</span> = <span class="number">0</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Son</span>(&#123;<span class="attr">val</span>:val&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Parent</span>&#123;</span><br><span class="line">    <span class="meta">@Consume</span> <span class="attr">val</span>:<span class="built_in">number</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Obeserved和-ObjectLink">@Obeserved和@ObjectLink</h2>
<h3 id="概述">概述</h3>
<ul>
<li>@ObjectLink不能在@entry内</li>
</ul>
<h3 id="示例-2">示例</h3>
<h4 id="常规用法">常规用法</h4>
<p>@entry组件：通过将@State修饰的变量a:A，赋值给View组件，即View({a.attr:a.attr})<br>
View组件：通过@ObjectLink attr，观察和修改a的属性attr<br>
@Observer A：有成员a类型为BasicClassA<br>
@Observer BasicClassA：有属性attr</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="嵌套对象">嵌套对象</h4>
<h2 id="Track">@Track</h2>
<p>属性改变时，只刷新自己的内容。如果不加，则会刷新整个类所有与界面绑定的属性的内容</p>
<ul>
<li>仅在类内使用</li>
<li>类中只要有一个属性使用了，其他与界面相关的属性都必须添加</li>
</ul>
<h2 id="Watch">@Watch</h2>
<h2 id="">$$</h2>
<h1>持久化与全局变量</h1>
<p>Localstorage、Appstorage、PersistenStorage</p>
<h2 id="LocalStorage">@LocalStorage</h2>
<ul>
<li>在一个Ability内数据共享，局限性大，基本用不上</li>
<li>一般只用于服务卡片<br>
###示例</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Page1————————————————————————————</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">data</span>: <span class="title class_">Record</span>&lt;<span class="built_in">string</span>,<span class="built_in">string</span>&gt;=&#123;</span><br><span class="line">    <span class="string">&quot;age&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"><span class="title class_">Let</span> <span class="attr">storage</span>:<span class="title class_">LocalStorage</span>=<span class="keyword">new</span> <span class="title class_">LocalStorage</span>(data)</span><br><span class="line"><span class="comment">//将storage注入到页面里面</span></span><br><span class="line"><span class="meta">@Entry</span>(storage)</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Page1</span> &#123;</span><br><span class="line">    <span class="title function_">aboutToAppear</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span>=storage.<span class="title function_">get</span>(<span class="string">&quot;age&quot;</span>) <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">        storage.<span class="title function_">set</span>(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Page2————————————————————————————</span></span><br><span class="line"><span class="keyword">import</span> &#123;storage&#125; <span class="keyword">from</span> <span class="title class_">Page1</span></span><br><span class="line"><span class="meta">@Entry</span>(storage)</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Page2</span> &#123;</span><br><span class="line">    <span class="title function_">aboutToAppear</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span>=storage.<span class="title function_">get</span>(<span class="string">&quot;age&quot;</span>) <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="AppStorage">@AppStorage</h2>
<ul>
<li>AppStorage缓存在应用进程内，应用结束后数据也随之销毁</li>
<li>AppStorage持久化则可以缓存到磁盘，即@PersistentStorage</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">AppStorage</span>.<span class="title function_">setOrCreate</span>(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;10&quot;</span>)</span><br><span class="line"><span class="title class_">AppStorage</span>.<span class="title function_">get</span>(<span class="string">&quot;userName&quot;</span>)<span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line"><span class="comment">//单向传值，不会写回AppStorage中，即父(storage)传子</span></span><br><span class="line"><span class="meta">@StorageProp</span>(<span class="string">&quot;name&quot;</span>) <span class="attr">name</span>:<span class="built_in">string</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment">//双向传值，会写回AppStorage中</span></span><br><span class="line"><span class="meta">@StorageLink</span>(<span class="string">&quot;name&quot;</span>) <span class="attr">name</span>:<span class="built_in">string</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="PersistentStorage">@PersistentStorage</h2>
<p>用于辅助AppStorage持久化到磁盘</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">PersistentStorage</span>.<span class="title function_">persistProp</span>(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">AppStoragecase03</span> &#123;</span><br><span class="line">    <span class="meta">@StorageProp</span>(<span class="string">&quot;userName&quot;</span>)<span class="attr">userName</span>:<span class="built_in">string</span>=<span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">PrefrencePage</span>&#123;</span><br><span class="line">    store_name=<span class="string">&quot;DEFAULT&quot;</span></span><br><span class="line">    <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title class_">Button</span>(<span class="string">&quot;持久化缓存数据&quot;</span>)</span><br><span class="line">        .<span class="title function_">onClick</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">//参数：context，仓库名称</span></span><br><span class="line">            <span class="comment">//context:上下文参数 Ability Application</span></span><br><span class="line">            <span class="comment">//仓库名称</span></span><br><span class="line">            preferences.<span class="title function_">getPreferences</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>),<span class="variable language_">this</span>.<span class="property">store_name</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="comment">//val是prefrences首选项对象</span></span><br><span class="line">            val.<span class="title function_">putSync</span>(<span class="string">&quot;userName&quot;</span>,<span class="variable language_">this</span>.<span class="property">message</span>)</span><br><span class="line">            <span class="comment">//写入到磁盘</span></span><br><span class="line">            val.<span class="title function_">flush</span>()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="title class_">Button</span>(<span class="string">&quot;获取持久化的数舞&quot;</span>)</span><br><span class="line">        .<span class="title function_">onClick</span>(<span class="function">()=&gt;</span>&#123;    </span><br><span class="line">            preferences.<span class="title function_">getPreferences</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>),<span class="variable language_">this</span>.<span class="property">store_name</span>)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="comment">//读取数据</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">result</span>=val.<span class="title function_">getSync</span>(<span class="string">&quot;userName&quot;</span>,<span class="string">&quot;&quot;</span>)<span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>静态模式</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; preferences &#125;<span class="keyword">from</span> <span class="string">&#x27;@kit.ArkData&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Context</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ohos.arkui.uIcontext&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PreferencesUtil</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="attr">storeName</span>:<span class="built_in">string</span> =<span class="string">&quot;DEFAULT&quot;</span></span><br><span class="line">    <span class="comment">//async代表该函数异步</span></span><br><span class="line">    <span class="comment">//await与async同时出现</span></span><br><span class="line">    <span class="comment">//获取仓库</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">getPreferenInstance</span>(<span class="params"><span class="attr">context</span>:<span class="title class_">Context</span>, storeName?:<span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> store = storeName != <span class="literal">undefined</span> ? storeName : <span class="title class_">PrefrencesUtil</span>.<span class="property">storeName</span></span><br><span class="line">        <span class="comment">//await 等待这个函数执行完毕 拿到结果</span></span><br><span class="line">        <span class="keyword">let</span> preferences = avait preferences.<span class="title function_">getPreferences</span>(context,store)</span><br><span class="line">        <span class="keyword">return</span> preferences</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//给仓库设置值</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">putInfo</span>(<span class="params"><span class="attr">context</span>: context, <span class="attr">key</span>: <span class="built_in">string</span>, <span class="attr">value</span>: <span class="built_in">string</span>, storeName?:<span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> preferences = <span class="keyword">await</span> preferencesUtil.<span class="title function_">getPreferenInstance</span>(context, storeName)</span><br><span class="line">        preferences.<span class="title function_">putsync</span>(key,value)</span><br><span class="line">        <span class="keyword">await</span> preferences.<span class="title function_">flush</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">aboutToAppear</span>():<span class="title class_">Promise</span>&lt;<span class="built_in">void</span>&gt;&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">result</span> = <span class="keyword">await</span> <span class="title class_">PreferencesUtil</span>.<span class="title function_">getInfo</span>(<span class="title function_">getContext</span>(<span class="variable language_">this</span>),<span class="variable language_">this</span>.<span class="property">key_name</span>) <span class="keyword">as</span> <span class="built_in">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>单例模式</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; preferences &#125;<span class="keyword">from</span> <span class="string">&#x27;@kit.ArkData&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Context</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ohos.arkui.uIcontext&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Prefrencesutils</span> &#123;</span><br><span class="line"><span class="comment">//获取仓库对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="attr">pre</span>: preferences.<span class="property">ValueType</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="title function_">getInstances</span>(<span class="params"><span class="attr">context</span>:<span class="title class_">Context</span></span>)&#123;</span><br><span class="line">        <span class="comment">//保证程序里面只有一个preferences 对象</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">PrefrencesUtils</span>.<span class="property">pre</span>!=<span class="literal">undefined</span> ll <span class="title class_">Prefrencesutils</span>.<span class="property">pre</span>!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">PrefrencesUtils</span>.<span class="property">pre</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title class_">PrefrencesUtils</span>.<span class="property">pre</span> = preferences.<span class="title function_">getPreferences</span>(context, <span class="string">&quot;DEFAULT&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">PrefrencesUtils</span>.<span class="property">pre</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">putInfo</span>(<span class="params"><span class="attr">context</span>: <span class="title class_">Context</span>, <span class="attr">key</span>: <span class="built_in">string</span>, <span class="attr">value</span>: <span class="built_in">string</span></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> prefrences = <span class="keyword">await</span> <span class="title class_">PrefrencesUtils</span>.<span class="title function_">getInstances</span>(context)</span><br><span class="line">        prefrences.<span class="title function_">putsync</span>(key,value)</span><br><span class="line">        prefrences.<span class="title function_">flush</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Harmony小技巧(1)——语法</title>
    <url>/posts/ca8a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>语法</h1>
<h2 id="值传递与引用字面量传递">值传递与引用字面量传递</h2>
<h3 id="值传递">值传递</h3>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//father</span></span><br><span class="line"><span class="title function_">myComponent</span>(<span class="variable language_">this</span>.<span class="property">params</span>)</span><br><span class="line"><span class="comment">//son</span></span><br><span class="line"><span class="meta">@Builder</span> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myComponent</span>(<span class="params">params</span>)&#123;</span><br><span class="line">	params</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="引用字面量传递">引用字面量传递</h3>
<p>引用字面量必须带&quot;{}&quot;，且值传递无法让父组件的值刷新</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title function_">myComponent</span>(&#123;<span class="attr">attr1</span>:a1,<span class="attr">attr2</span>:a2&#125;)</span><br><span class="line"><span class="comment">//son</span></span><br><span class="line"><span class="meta">@Builder</span> </span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myComponent</span>(<span class="params">params</span>)&#123;</span><br><span class="line">	params.<span class="property">attr1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">Params</span>&#123;</span><br><span class="line">	<span class="attr">attr1</span>:<span class="title class_">Attr1</span></span><br><span class="line">	<span class="attr">attr2</span>:<span class="title class_">Attr2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="取反">取反</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">doLike</span>:<span class="function">(<span class="params"><span class="attr">item</span>:<span class="title class_">ReplyItemModel</span></span>)=&gt;</span><span class="built_in">void</span> =<span class="function">(<span class="params"><span class="attr">item</span>: <span class="title class_">ReplyItemModel</span></span>)=&gt;</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="传入匿名函数">传入匿名函数</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">click</span>=!<span class="variable language_">this</span>.<span class="property">clic</span></span><br></pre></td></tr></table></figure>
<h2 id="类型断言">类型断言</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">xx <span class="keyword">as</span> <span class="title class_">Type</span></span><br><span class="line"><span class="attr">data</span>:<span class="title class_">GoodsModule</span>=<span class="keyword">new</span> <span class="title class_">GoodsModule</span>(&#123;&#125; <span class="keyword">as</span> <span class="title class_">GoodsInfo</span>)</span><br></pre></td></tr></table></figure>
<h1>对Object数组排序</h1>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(sortMethod===<span class="literal">true</span>)&#123;</span><br><span class="line">	<span class="variable language_">this</span>.<span class="property">commentsInfoArr</span>.<span class="title function_">sort</span>(<span class="function">(<span class="params"><span class="attr">x</span>:<span class="title class_">CommentsInfo</span>,<span class="attr">y</span>:<span class="title class_">CommentsInfo</span></span>)=&gt;</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (x.<span class="property">date</span> &gt;y.<span class="property">date</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (x.<span class="property">date</span> &lt;y.<span class="property">date</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>&#125;</span><br><span class="line">	)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="对Object数组去重">对Object数组去重</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">newCart</span>:<span class="title class_">Foods</span>[] = []</span><br><span class="line"> <span class="variable language_">this</span>.<span class="property">shoppingCartArr</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params"><span class="attr">item</span>:<span class="title class_">Foods</span></span>)=&gt;</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> newCart.<span class="title function_">includes</span>(item)?<span class="string">&#x27;&#x27;</span>:newCart.<span class="title function_">push</span>(item)</span><br><span class="line"> &#125;)</span><br><span class="line"> <span class="variable language_">this</span>.<span class="property">shoppingCartArr</span> = newCart</span><br></pre></td></tr></table></figure>
<h2 id="日期格式化">日期格式化</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="meta">@State</span> <span class="attr">now</span>: <span class="title class_">Date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"><span class="meta">@State</span> <span class="attr">formattedDate</span>: <span class="built_in">string</span> = <span class="variable language_">this</span>.<span class="property">now</span>.<span class="title function_">toLocaleDateString</span>(<span class="string">&quot;en-US&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="随机数">随机数</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">rnd = <span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="variable constant_">RANGE</span></span><br></pre></td></tr></table></figure>
<h2 id="时间相关">时间相关</h2>
<h3 id="setTimeout">setTimeout</h3>
<p>t时间后才执行</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">	&#125;,t)</span><br></pre></td></tr></table></figure>
<h3 id="setInterval">setInterval</h3>
<p>每隔t时间执行一次</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="attr">taskId</span>:<span class="built_in">number</span> = -<span class="number">1</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">taskId</span> = <span class="title function_">setTnterval</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">	++<span class="variable language_">this</span>.<span class="property">cnt</span></span><br><span class="line">	<span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">taskId</span>)</span><br><span class="line">&#125;,t)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/3eeb/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><img src="https://ghchart.rshah.org/kcsx" alt=""></p>
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start">Quick Start</h2>
<h3 id="Create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Harmony国际化</title>
    <url>/posts/8fe/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1>配置路径</h1>
<p>resources/base/element/string.json<br>
resources/zh-CN/element/string.jsonresources/base/</p>
<h1>添加条目</h1>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;module_desc&quot;</span>,</span><br><span class="line">  <span class="string">&quot;value&quot;</span>: <span class="string">&quot;module description&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<h1>使用</h1>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Text</span>($r(<span class="string">&quot;app.string.calculator&quot;</span>))</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>鸿蒙</tag>
      </tags>
  </entry>
</search>
